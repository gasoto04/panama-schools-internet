---
title: "Public Internet Correlation between Population Density and Schools"
subtitle: "DSAN 6750 / PPOL 6805: GIS for Spatial Data Science"
authors:
  - name: Gabriel Soto
    email: gas102@georgetown.edu
    affiliation: Georgetown University
    corresponding: true
format:
  html:
    theme: cosmo
    code-fold: true
    code-tools: false
    code-overflow: wrap
    #toc: true
    #toc-depth: 3
    #toc-location: left
    #number-sections: true
    #html-math-method: katex
    #css: styles.css
    df-print: kable
  pdf:
    # https://quarto.org/docs/reference/formats/pdf.html
    link-citations: true
execute:
  echo: false
  warning: false
  message: false
prefer-html: true
bibliography: GIS_Manuscript.bib
title-block-banner: "#E69F0095"
title-block-banner-color: "black"
---
## Introduction

Do schools in Panama get better access to public internet? This research will analyze whether schools in Panama, get access to public internet via access points. We will also look into, the spatial correlation of access points, where we want to highlight if access points are either located in high density areas or not. As a plus, I will also look into the spatial relationship of access points and schools with the Panamerican Highway, which is the main highway that crosses the country. For this project we will be using the following data sources:

* Schools locations: Ministry of Education of Panama
* Access Points locations: Governement Innovation Institution
* Panamerican Highway location: Smithsonian Tropical Research Institution




### Hypothesis

For this project I have the following First-Order and Second-Order properties:

> 1. First-Order Property: I will analyze how the intensity of access points varies across Panama in relation to schools and population density. My hypothesis is that the density of access points is higher in areas with higher population density and greater concentration of schools, suggesting that infrastructure deployment follows population and educational needs.
> 2. Second-Order Property: For my second-order property, I want to explore the spatial relationships between access points, schools, and population density. My hypothesis is that access points exhibit positive spatial autocorrelation with both schools and population density, indicating that their placement is influenced by these factors and tends to cluster in areas with higher educational and population demands.

Let's begin below, with the Exploratory Data Analysis.

```{r import-packages, echo=FALSE}
#library
library(sf)|> suppressPackageStartupMessages()
library(dplyr)|> suppressPackageStartupMessages()
library(stringr)|> suppressPackageStartupMessages()
library(ggplot2)|> suppressPackageStartupMessages()
library(tmap)|> suppressPackageStartupMessages()
library(readr)|> suppressPackageStartupMessages()
library(DT)|> suppressPackageStartupMessages()
library(skimr)|> suppressPackageStartupMessages()
library(plotly)|> suppressPackageStartupMessages()
library(leaflet)|> suppressPackageStartupMessages()
library(plotly)|> suppressPackageStartupMessages()
library(osmdata)|> suppressPackageStartupMessages()
library(spdep)|> suppressPackageStartupMessages()
library(spatstat)|> suppressPackageStartupMessages()

```

```{r main-functions}
#functions
convert_dms_to_decimal <- function(dms_str) {
  # Extract components
  parts <- str_match(dms_str, "(\\d+)Â° (\\d+)' (\\d+\\.?\\d*)\"\" ([N|S|E|W])")
  
  # Convert components to numeric
  degrees <- as.numeric(parts[, 2])
  minutes <- as.numeric(parts[, 3])
  seconds <- as.numeric(parts[, 4])
  
  # Calculate decimal degrees
  decimal <- degrees + minutes/60 + seconds/3600
  
  # Apply sign based on direction
  direction <- parts[, 5]
  decimal <- ifelse(direction %in% c("S", "W"), -decimal, decimal)
  
  return(decimal)
}

```

```{r data-import, echo=FALSE}

#schools data
schools_csv <- read.csv("data-spatial/schools-data.csv")

#district data
district_path <- "data-spatial/panama-districts/gadm41_PAN_2.json"
# Read GeoJSON data
district_data <- st_read(district_path, quiet = TRUE)
# Fix any invalid geometries
district_data <- st_make_valid(district_data)

#Panama highway
# Read GeoJSON data
highway_data <- st_read("data-spatial/panam-highway.geojson", quiet = TRUE)

#access points data
ap_csv <- read.csv("data-spatial/access-points.csv", fileEncoding="latin1")
ap_data <- st_as_sf(ap_csv, 
                      coords = c("long", "lat"),
                      crs = 4326)
```

```{r cleaning-coordinates-schools, echo=FALSE}
#Cleaning data

# Convert your coordinates
schools_csv$decimal_lat <- convert_dms_to_decimal(schools_csv$lat)
schools_csv$decimal_long <- convert_dms_to_decimal(schools_csv$long)

#removing long, lat columns and creating schools_df
schools_df <- schools_csv %>% select(-lat) %>% select(-long)

# Create SF object with converted coordinates from schools_df
schools_data <- st_as_sf(schools_df, 
                      coords = c("decimal_long", "decimal_lat"),
                      crs = 4326)
```

```{r removing-objects, echo=FALSE}
rm(schools_csv, district_path, ap_csv, schools_df)
```
## Exploratory Data Analysis (EDA)

Below we display two tables for both **Districts and at the Province level** showing relevant indicators such as:
- Numbers of schools
- Numbers of Access Points
- Population
- Access Points per School Ratio
- Access Points per 1000 people Ratio

This is useful to compare, across the project, how more densed districts behave spatially.
```{r exploratoy-data-analysis, echo=FALSE}

#province summary
province_summary <- schools_data %>%
  st_drop_geometry() %>%
  group_by(province) %>%
  summarise(schools = n()) %>%
  full_join(
    ap_data %>%
      st_drop_geometry() %>%
      group_by(province) %>%
      summarise(access_points = n()),
    by = "province"
  ) %>%
  full_join(
    district_data %>%
      st_drop_geometry() %>%
      group_by(NAME_1) %>%
      summarise(population = sum(population)),
    by = c("province" = "NAME_1")
  ) %>%
  mutate(
    ap_per_school = round(access_points/schools, 2),
    ap_per_1000_people = round((access_points/population) * 1000, 2)
  )


#district summary
district_summary <- schools_data %>%
  st_drop_geometry() %>%  # Remove spatial component
  group_by(district) %>%
  summarise(schools = n()) %>%
  full_join(
    ap_data %>%
      st_drop_geometry() %>%  # Remove spatial component
      group_by(district) %>%
      summarise(access_points = n()),
    by = "district"
  ) %>%
  full_join(
    district_data %>%
      st_drop_geometry() %>%
      select(NAME_2, population),
    by = c("district" = "NAME_2")
  ) %>%
  mutate(
    access_points = coalesce(access_points, 0),  # Replace NA with 0
    ap_per_school = round(access_points/schools, 2),
    ap_per_1000_people = round((access_points/population) * 1000, 2)  
  )

district_summary <- district_summary %>%
  filter(!is.na(population), !is.na(access_points)) %>%
  arrange(district) 


datatable(province_summary,
          colnames = c("Province", "Number of Schools", "Number of Access Points", "Population", "AP per School", "AP per 1000 people"),
          options = list(pageLength = 20))

datatable(district_summary,
          colnames = c("District", "Number of Schools", "Number of Access Points", "Population", "AP per School", "AP per 1000 people"),
          options = list(pageLength = 20))


#province_summary
#district_summary
```

<br>

We can see from the above tables, that Districts that house cities, are the ones with higher amounts of access points. We see the same behavior with the Provinces, specially with main cities such as Panama, Veraguas and Chiriqui. 
<br>
Most of these studies, however, are based on observations of **conflict events**. In this study, we study the more fundamental variable of a capital's distance from the **population centroid** of the country.
<br>

```{r access-point-district-graph, eval=FALSE, echo=FALSE}
district_summary <- district_summary %>%
  filter(!is.na(population), !is.na(access_points)) %>%
  arrange(district) 


plot_ly(district_summary, 
        x = ~population, 
        y = ~access_points,
        type = 'scatter',
        mode = 'markers',
        marker = list(
          size = 10,
          color = 'rgb(49,130,189)',
          opacity = 0.7,
          line = list(color = 'rgb(27,71,105)', width = 1)
        ),
        text = ~district,
        hovertemplate = paste(
          '<b>District:</b> %{text}<br>',
          '<b>Population:</b> %{x:,}<br>',
          '<b>Access Points:</b> %{y}<br>',
          '<b>Schools:</b> ', district_summary$schools, '<br>',
          '<b>AP per School:</b> ', district_summary$ap_per_school,
          '<extra></extra>'
        )
) %>%
  add_lines(x = ~population,
            y = ~fitted(lm(access_points ~ population, data = district_summary)),
            line = list(color = 'rgb(219,64,82)',
                       width = 2,
                       dash = 'dash'),
            showlegend = TRUE,
            name = 'Trend line') %>%
  layout(
    title = list(
      text = "Access Points vs Population by District",
      font = list(size = 24)
    ),
    xaxis = list(
      title = "Population",
      gridcolor = 'rgb(255,255,255)',
      gridwidth = 2,
      showgrid = TRUE,
      zeroline = FALSE
    ),
    yaxis = list(
      title = "Number of Access Points",
      gridcolor = 'rgb(255,255,255)',
      gridwidth = 2,
      showgrid = TRUE,
      zeroline = FALSE
    ),
    paper_bgcolor = 'rgb(251,251,251)',
    plot_bgcolor = 'rgb(251,251,251)',
    showlegend = TRUE
  )

```
<br>

### Correlations between Population, Schools and Access Points

Below I show 2 plots, where on the left we see the relationship between Access points and Population and on the right, we see the relationship between Access Point-School ratio with the Population.
```{r summary-plots, echo=FALSE}

# Create side-by-side plots
subplot(
  # Left plot: Access Points vs Population
  plot_ly(district_summary, 
          x = ~population, 
          y = ~access_points,
          type = 'scatter',
          mode = 'markers',
          marker = list(
            size = 10,
            color = 'rgb(49,130,189)',
            opacity = 0.7,
            line = list(color = 'rgb(27,71,105)', width = 1)
          ),
          text = ~district,
          hovertemplate = paste(
            '<b>District:</b> %{text}<br>',
            '<b>Population:</b> %{x:,}<br>',
            '<b>Access Points:</b> %{y}<br>',
            '<extra></extra>'
          )
  ) %>%
    add_lines(x = ~population,
              y = ~fitted(lm(access_points ~ population, data = district_summary)),
              line = list(color = 'rgb(219,64,82)',
                         width = 2,
                         dash = 'dash'),
              showlegend = TRUE,
              name = 'Access Points Trend') %>%
    layout(
      title = "Access Points vs Population",
      xaxis = list(
        title = "Population",
        gridcolor = 'rgb(255,255,255)',
        gridwidth = 2,
        showgrid = TRUE,
        zeroline = FALSE
      ),
      yaxis = list(
        title = "Number of Access Points",
        gridcolor = 'rgb(255,255,255)',
        gridwidth = 2,
        showgrid = TRUE,
        zeroline = FALSE
      ),
      paper_bgcolor = 'rgb(251,251,251)',
      plot_bgcolor = 'rgb(251,251,251)'
    ),
  
  # Right plot: Access Points per School
  plot_ly(district_summary, 
          x = ~population, 
          y = ~ap_per_school,
          type = 'scatter',
          mode = 'markers',
          marker = list(
            size = 10,
            color = 'rgb(50,205,50)',
            opacity = 0.7,
            line = list(color = 'rgb(0,100,0)', width = 1)
          ),
          text = ~district,
          hovertemplate = paste(
            '<b>District:</b> %{text}<br>',
            '<b>Population:</b> %{x:,}<br>',
            '<b>Access Points per School:</b> %{y:.2f}<br>',
            '<b>Total Schools:</b> ', district_summary$schools, '<br>',
            '<extra></extra>'
          )
  ) %>%
    add_lines(x = ~population,
              y = ~fitted(lm(ap_per_school ~ population, data = district_summary)),
              line = list(color = 'rgb(255,69,0)',
                         width = 2,
                         dash = 'dash'),
              showlegend = TRUE,
              name = 'AP per School Trend') %>%
    layout(
      title = "Access Points per School vs Population",
      xaxis = list(
        title = "Population",
        gridcolor = 'rgb(255,255,255)',
        gridwidth = 2,
        showgrid = TRUE,
        zeroline = FALSE
      ),
      yaxis = list(
        title = "Access Points per School",
        gridcolor = 'rgb(255,255,255)',
        gridwidth = 2,
        showgrid = TRUE,
        zeroline = FALSE
      ),
      paper_bgcolor = 'rgb(251,251,251)',
      plot_bgcolor = 'rgb(251,251,251)'
    ),
  
  # Subplot layout
  nrows = 1,
  shareX = TRUE,
  titleX = TRUE
)
```
<br>

### Statistical Regression of Access Points on Population

I have run 2 statistical regression models, where I regress Access Points on Population and Access Points both on Population and Schools. Adding schools improves the model's explanatory power (RÂ² increased by 2.6%). Both population and schools are significant predictors as we can see in the below tables. We can see that for each additional school, we expect 0.216 more access points, holding population constant.
```{r access-point-regression, echo=FALSE}

library(modelsummary)

# Create multiple models to compare
model1 <- lm(access_points ~ population, data = district_summary)
model2 <- lm(access_points ~ population + schools, data = district_summary)

# Create nice table comparing both models
modelsummary(
  list("Model 1" = model1, "Model 2" = model2),
  stars = TRUE,
  gof_map = c("nobs", "r.squared", "adj.r.squared"),
  coef_map = c(
    "(Intercept)" = "Intercept",
    "population" = "Population",
    "schools" = "Schools"
  ),
  title = "Regression Results: Access Points, Population, and Schools"
)
```
<br>


<br>

## Geospatial Analysis

### Access Points Map

Let's explore how access points are distributed along the country. As validated above, the districts with the highest amount of access points are those located around Panama City (459 approx), Santiago with 198 and Boquete with approximately 118 access points. Interestingly we can detect that probably these clusters, do not follow a random location. I have clustered the access points data, to facilitate the readibility of the map. We can see the first signs that the spatial distribution follows a "S" layout, same as the country. This will be more clear later on, when we display other points. 

```{r access-points-map, echo=FALSE}

# Create the map
ap_map <- leaflet(ap_data) %>%
  # Add base map tiles
  addProviderTiles(providers$CartoDB.Positron) %>%
  # Add access points
  addCircleMarkers(
    radius = 5,
    color = "blue",
    fillColor = "blue",
    fillOpacity = 0.6,
    stroke = TRUE,
    weight = 1,
    popup = ~paste(
      "<strong>Location:</strong>", name, "<br>",
      "<strong>Province:</strong>", province, "<br>",
      "<strong>District:</strong>", district, "<br>",
      "<strong>County:</strong>", county, "<br>",
      "<strong>Type:</strong>", type, "<br>",
      "<strong>Date:</strong>", date
    ),
    # Enable clustering to handle many points
    clusterOptions = markerClusterOptions()
  ) %>%
  # Set the initial view to Panama
  setView(lng = -80.782127, lat = 8.537981, zoom = 7)

ap_map

```

<br>

### Access Points Density per District Map

Now let's explore how different access points density is within districts. With this map we can confirm that the districts of David, Santiago, Colon and Panama are the ones with a higher concentration of access points. This makes sense in the context that, these districts are where we can locate higher economic development in the country.
```{r district-data-access-points, echo=FALSE}
district_data_merged <- district_data %>%
  left_join(district_summary, by = c("NAME_2" = "district"))


breaks <- c(1, 10, 50, 100, 200, max(district_data_merged$access_points))
pal <- colorBin(
  palette = "RdYlGn",
  domain = district_data_merged$access_points,
  bins = breaks,
  reverse = FALSE
)

# Create the map
leaflet(district_data_merged) %>%
  addProviderTiles(providers$CartoDB.DarkMatter) %>%
  addPolygons(
    fillColor = ~pal(access_points),
    fillOpacity = 0.7,
    weight = 1,
    color = "#666",
    highlightOptions = highlightOptions(
      weight = 2,
      color = "#666",
      fillOpacity = 0.9,
      bringToFront = TRUE
    ),
    popup = ~paste(
      "<strong>District:</strong>", NAME_2, "<br>",
      "<strong>Province:</strong>", NAME_1, "<br>",
      "<strong>Access Points:</strong>", access_points, "<br>",
      "<strong>Schools:</strong>", schools
    )
  ) %>%
  addLegend(
    position = "bottomright",
    pal = pal,
    values = ~access_points,
    title = "Number of Access Points",
    opacity = 0.7,
    labFormat = labelFormat(digits = 0)  # Show integers only
  ) %>%
  setView(lng = -80.782127, lat = 8.537981, zoom = 7)

```
<br>

### Panama Highway Map

Highways represent economic development, as they try to bridge different disitrcts across the country. Our hypothesis here is that, access points will be located, around districts where we can see an intersection with the Panamerican Highway. It is worth noting that this highway goes across the complete country form west to east, mostly located on the pacific side of the country, where Panama City is.

```{r panama-highway, echo=FALSE}
panama_bb <- getbb("Panama")
highway <- opq(panama_bb) %>%
  add_osm_feature(key = "name", value = "Carretera Panamericana") %>%
  osmdata_sf()

leaflet() %>%
  addProviderTiles(providers$CartoDB.DarkMatter) %>%
  addPolylines(
    data = highway$osm_lines,  # Using the lines from your downloaded data
    color = "red",
    weight = 2,
    opacity = 0.8,
    popup = ~name  # This will show the road name when clicked
  ) %>%
  setView(lng = -80.782127, lat = 8.537981, zoom = 7)

```
<br>

### Public Schools Map

This map shows, clustered, every school in the country. There are 9 types of classifications on the school system:

- COIF: Early Childhood Attention Center
- Cefacei: Early Chilhood Community and Familiy Centers 
- IPHE: Special Habilitation Panamanian Institute
- Kinder: Pre Kinder
- Parvulario: Kinder
- Primaria Oficial: Elementary School
- Privada: Private School
- Secundaria: Highschool
- Universidad: College

```{r schools-map, echo=FALSE}
pal <- colorFactor(
  palette = "Set3",
  domain = unique(schools_data$type)
)

leaflet() %>%
  # Add a base map (you can change the provider as we discussed)
  addProviderTiles(providers$CartoDB.DarkMatter) %>%
  # Add school points with clustering
  addCircleMarkers(
    data = schools_data,
    radius = 6,
    color = ~pal(type),
    fillOpacity = 1,
    stroke = TRUE,
    weight = 1,
    popup = ~paste(
      "<strong>School:</strong>", name, "<br>",
      "<strong>Type:</strong>", type, "<br>",
      "<strong>Province:</strong>", province, "<br>",
      "<strong>District:</strong>", district, "<br>",
      "<strong>County:</strong>", county
    ),
    clusterOptions = markerClusterOptions()
  ) %>%
  addLegend(
    position = "bottomright",
    pal = pal,
    values = schools_data$type,
    title = "School Type"
  ) %>%
  # Set the initial view to Panama
  setView(lng = -80.782127, lat = 8.537981, zoom = 7)

```

<br>

### Which Districts are Intersected by the Panamerican Highway?

Below we find, which are the districts that intersect with the Panamerican Highway. As confirmed by the above analysis, the districts with the higher population densities and with the higher amount of access points installed, are more likely to be intersected by it. This is a causal effect of infrastructure development, as highways are more likely to be equiped with better structures to implement different services such as telecommunications. As seen on the maps above, we can see that the districts with a higher concentration of access points, are the same ones that intersect with the highway. 


```{r intersection-district-highway, echo=FALSE}

districts_with_highway <- st_intersection(district_data, highway$osm_lines)

highway_districts <- unique(districts_with_highway$NAME_2)


leaflet() %>%
  addProviderTiles(providers$CartoDB.DarkMatter) %>%
  # Add all districts in light gray
  addPolygons(
    data = district_data,
    fillColor = "lightgray",
    fillOpacity = 0.3,
    weight = 1,
    color = "gray"
  ) %>%
  # Highlight districts with highway in blue
  addPolygons(
    data = district_data[district_data$NAME_2 %in% highway_districts,],
    fillColor = "yellow",
    fillOpacity = 0.3,
    weight = 1,
    color = "blue",
    popup = ~NAME_2
  ) %>%
  # Add the highway in red
  addPolylines(
    data = highway$osm_lines,
    color = "red",
    weight = 2
  ) %>%
  setView(lng = -80.782127, lat = 8.537981, zoom = 7)

```

<br>

## Moran's I



```{r morans-i, eval=FALSE,  echo=FALSE}
#district_data_complete <- merge(district_data, 
#                               district_summary, 
#                               by.x = "NAME_2", 
#                               by.y = "district")
# # 1. Create a neighbors list based on district boundaries
# # Queens case (districts sharing any boundary point)
# nb <- poly2nb(district_data_complete, queen = TRUE)
# 
# # 2. Create spatial weights
# w <- nb2listw(nb, style = "W", zero.policy = TRUE)
# 
# # Now calculate Moran's I with zero.policy=TRUE
# moran_test <- moran.test(district_data_complete$access_points, w, zero.policy = TRUE)
# print(moran_test)

# For visualization
# moran.plot(district_data_complete$access_points, w, 
#           labels = district_data_complete$NAME_2,
#           xlab = "Access Points",
#           ylab = "Spatially Lagged Access Points",
#           zero.policy = TRUE)

```
<br>

### Access Points Moran's I

We know that the scale runs from -1 (perfect dispersion) to +1 (perfect clustering). Our result is **0.229**, which indicates positive spatial correlation meaning that districts with similar number of access points (higher or lower) tend to cluster together. With our p-statistic, we can reject the null hypothesis of random spatial distribution. This means that access points are not positioned randomly but rather logically.


```{r access-points-schools, echo=FALSE}
# First, merge the data
district_data_complete <- merge(district_data, 
                              district_summary, 
                              by.x = "NAME_2", 
                              by.y = "district")

# Then create neighbors list
nb <- poly2nb(district_data_complete, queen = TRUE)

# Now proceed with analysis
# Standardize variables
z_ap <- scale(district_data_complete$access_points)
z_schools <- scale(district_data_complete$schools)

# Calculate Moran's I
moran_ap_schools <- moran.test(district_data_complete$access_points, 
                              nb2listw(nb, style="W", zero.policy=TRUE), 
                              zero.policy=TRUE)

print("Moran's I for Access Points vs Schools:")
print(moran_ap_schools)

```

<br>

### Mapping Access Points vs Schools ratio

As expected, we have a higher ratio within districts that are city districts such as Panama, San Miguelito, Pedasi and Chitre. It is worth mentioning that for instance, Pedasi is not a big city town, but instead is touristy town. They have 9 school total, with 11 AP located in this district. In more urban areas we will have a higher ratio of access points to schools. This signals to a possibility of schools being located in highly densed areas and therefore, finding more access points.


```{r morans-i-plots, echo=FALSE}
# Set up to display two Moran plots side by side
# par(mfrow=c(1,2))
# 
# # Plot for Access Points per Density
# moran.plot(district_data_complete$ap_per_density, 
#          w,
#          labels=district_data_complete$NAME_2,
#          xlab="Access Points per Density",
#          ylab="Spatially Lagged AP per Density",
#          main="Access Points per Density",
#          zero.policy=TRUE)
# 
# # Plot for Access Points per School
# moran.plot(district_data_complete$ap_per_school, 
#          w,
#          labels=district_data_complete$NAME_2,
#          xlab="Access Points per School",
#          ylab="Spatially Lagged AP per School",
#          main="Access Points per School",
#          zero.policy=TRUE)
# 
# # Reset plotting parameters
# par(mfrow=c(1,1))
# 
# # Let's also create choropleth maps to visualize these ratios
# # Map for AP per Density
# leaflet() %>%
#  addProviderTiles(providers$CartoDB.Positron) %>%
#  # First map: AP per Density
#  addPolygons(
#    data = district_data_complete,
#    fillColor = ~colorNumeric("viridis", ap_per_density)(ap_per_density),
#    fillOpacity = 0.7,
#    weight = 1,
#    color = "white",
#    popup = ~paste(
#      "<strong>District:</strong>", NAME_2,
#      "<br><strong>AP per Density:</strong>", round(ap_per_density, 4)
#    )
#  ) 

# Map for AP per School
leaflet() %>%
 addProviderTiles(providers$CartoDB.Positron) %>%
 # Second map: AP per School
 addPolygons(
   data = district_data_complete,
   fillColor = ~colorNumeric("viridis", ap_per_school)(ap_per_school),
   fillOpacity = 0.7,
   weight = 1,
   color = "white",
   popup = ~paste(
     "<strong>District:</strong>", NAME_2,
     "<br><strong>AP per School:</strong>", round(ap_per_school, 4)
   )
 ) 
```

<br>

## Pairwise Intensity function

**Analyzing Intensity function**

As expected, we see that access points tend to cluster together within distances of 1500 meters. When that threshold is passed, the clustering of these points decreases sharply. This is consonant to the logic of installing access points in dense areas and where more schools are located. The **Mean nearest neighbor distance** is 1617.98 meters. This means that we have some outliers access points, that are located in difficult access areas in very rural zones. They are more likely to be separeted from others. These locations could be pulling the mean up. On the other hand the **Median nearest neighbor distance** is 400.99 meters which is lower than the mean. This indicates that most of the access points are clustered in distances lower than 400 meters. This indicates a clustered pattern and not a uniform across the country. These are likely to be clustered in urban areas.


```{r pairwise-intensity, echo=FALSE}

# First, project all your data to UTM 17N
district_projected <- st_transform(district_data, 32617)
ap_projected <- st_transform(ap_data, 32617)

# Create observation window
window <- as.owin(st_union(district_projected))

# Create point pattern
ap_ppp <- ppp(
  x = st_coordinates(ap_projected)[,1],
  y = st_coordinates(ap_projected)[,2],
  window = window
)

# Calculate PCF
ap_pcf <- pcf(ap_ppp, 
              correction = "translate",
              divisor = "d",
              r = seq(0, 10000, by = 100))  # 10km in 100m steps

# Create visualization
# Plot 1: PCF
plot(ap_pcf,
     main = "Spatial Pattern of Access Points",
     xlab = "Distance (meters)",
     ylab = "g(r)",
     xlim = c(0, 10000),
     lwd = 2,
     col = "blue")
abline(h = 1, lty = 2, col = "red")

# Plot 2: Point pattern
plot(ap_ppp, 
     main = "Access Points Distribution",
     pch = 16,
     cex = 1)

# Calculate mean nearest neighbor distance
nnd <- nndist(ap_ppp)
cat("\nMean nearest neighbor distance:", round(mean(nnd), 2), "meters")
cat("\nMedian nearest neighbor distance:", round(median(nnd), 2), "meters")


```

<br>

### Buffer Analysis with Panamerican Highway

As expected, from this analysis, we can see that there is a higher amount of schools outside the inner buffers, as schools will try to serve the wider population, beyond the urban areas. On the other hand, we will see more access points located in urban areas, therefore closer to the highway as they serve more the densed urban areas. Now if we analyze and see the amount of schools greater that 5km from the highway we see the number increaseing. This logically means that location of schools it is not as influenced by the highway as access points are. Schools follow a more uniformed pattern across the country, without clustering. This gives higher access to school to areas that are rural as well.


```{r buffer-analysis, echo=FALSE}
# Transform all data to UTM 17N first
highway_projected <- st_transform(highway$osm_lines, 32617)
ap_projected <- st_transform(ap_data, 32617)
schools_projected <- st_transform(schools_data, 32617)

# Create buffers
buffer_5km <- st_buffer(highway_projected, 5000)
buffer_10km <- st_buffer(highway_projected, 10000)

# Transform everything back to WGS84 for mapping
highway_wgs84 <- st_transform(highway_projected, 4326)
ap_wgs84 <- st_transform(ap_projected, 4326)
schools_wgs84 <- st_transform(schools_projected, 4326)
buffer_5km_wgs84 <- st_transform(buffer_5km, 4326)
buffer_10km_wgs84 <- st_transform(buffer_10km, 4326)

# Now create the map
leaflet() %>%
  addProviderTiles(providers$CartoDB.Positron) %>%
  # Add the buffers
  addPolygons(
    data = buffer_10km_wgs84,
    fillColor = "yellow",
    fillOpacity = 0.2,
    color = "yellow",
    weight = 1
  ) %>%
  addPolygons(
    data = buffer_5km_wgs84,
    fillColor = "blue",
    fillOpacity = 0.2,
    color = "blue",
    weight = 1
  ) %>%
  # Add the highway
  addPolylines(
    data = highway_wgs84,
    color = "black",
    weight = 2
  ) %>%
  # Add access points
  addCircleMarkers(
    data = ap_wgs84,
    radius = 3,
    color = "red",
    fillOpacity = 0.7,
    group = "Access Points"
  ) %>%
  # Add schools
  addCircleMarkers(
    data = schools_wgs84,
    radius = 3,
    color = "green",
    fillOpacity = 0.7,
    group = "Schools"
  ) %>%
  # Add a legend
  addLegend(
    position = "bottomright",
    colors = c("red", "green"),
    labels = c("Access Points", "Schools"),
    title = "Points"
  ) %>%
  # Add layer control
  addLayersControl(
    overlayGroups = c("Access Points", "Schools"),
    options = layersControlOptions(collapsed = FALSE)
  ) %>%
  # Set the view to Panama
  setView(lng = -80.782127, lat = 8.537981, zoom = 7)
```

<br>

```{r buffer-zones-analysis, echo=FALSE}
# Count access points in each buffer
ap_5km <- sum(lengths(st_intersects(ap_projected, buffer_5km)))
ap_5_10km <- sum(lengths(st_intersects(ap_projected, buffer_10km))) - ap_5km
ap_beyond <- nrow(ap_projected) - (ap_5km + ap_5_10km)

# Count schools in each buffer
schools_5km <- sum(lengths(st_intersects(schools_projected, buffer_5km)))
schools_5_10km <- sum(lengths(st_intersects(schools_projected, buffer_10km))) - schools_5km
schools_beyond <- nrow(schools_projected) - (schools_5km + schools_5_10km)

# Create summary table
buffer_summary <- data.frame(
  Zone = c("0-5 km", "5-10 km", "Beyond 10 km"),
  Access_Points = c(ap_5km, ap_5_10km, ap_beyond),
  Schools = c(schools_5km, schools_5_10km, schools_beyond),
  stringsAsFactors = FALSE
)

# Add percentages and ratios
buffer_summary <- buffer_summary %>%
  mutate(
    AP_Percentage = round(Access_Points / sum(Access_Points) * 100, 2),
    Schools_Percentage = round(Schools / sum(Schools) * 100, 2),
    AP_per_School = round(Access_Points / Schools, 2)
  )

print(buffer_summary)
```

<br>

### Access Points Distance from Panamerican Highway Analysis

Here we analyze how far are the acces points from the highway and how clustered they are. Within the distribution, most access points are located within a 10km radius from the highway, meaning that they do follow a infrastructure logic behind the installation. It is very important to mention that there is an increase in the amount of access points beyond the 90/100kms. This follows the installation of access points in areas of difficult access, beyond the urban areas. From the results we see that the closest access point is located at **0.33kms** from the highway. **A quarter** of the distribution of access points are within 1.55kms. Then, **half** of the access points are located within 8kms of distance from the highway. And 75% of the access points are within the 23kms mark. The furthest access point is located at **112.14kms** from the highway, probably being a remote area or achipielago such as Bocas del Toro. This public data location data is a right-skewed distribution, where the tail of the distribution ends at the right. It's a long tail stretch as these aps are not located in further areas, in comparison to those installed in urban areas. 

```{r highway-distances,  echo=FALSE}
# Calculate distances from each access point to the nearest part of the highway
distances <- st_distance(ap_projected, highway_projected)
min_distances <- apply(distances, 1, min)  # Get minimum distance for each point

# Convert to kilometers for easier interpretation
min_distances_km <- min_distances/1000

# Basic statistics
distance_stats <- summary(min_distances_km)
print("Summary statistics of distances (in km):")
print(distance_stats)

# Create a histogram of distances
hist(min_distances_km, 
     breaks = 30,
     main = "Distribution of Access Point Distances from Highway",
     xlab = "Distance (km)",
     ylab = "Number of Access Points")

# We can also map this, coloring points by their distance to the highway
# Create a color palette based on distances
pal <- colorNumeric(
  palette = "YlOrRd",  # Yellow to Orange to Red
  domain = min_distances_km
)

# Create map
leaflet() %>%
  addProviderTiles(providers$CartoDB.DarkMatter) %>%
  # Add highway
  addPolylines(
    data = highway_wgs84,
    color = "red",
    weight = 2
  ) %>%
  # Add points colored by distance
  addCircleMarkers(
    data = ap_wgs84,
    radius = 3,
    color = ~pal(min_distances_km),
    popup = ~paste("Distance to highway:", round(min_distances_km, 2), "km"),
    fillOpacity = 0.7
  ) %>%
  # Add legend
  
  addLegend(
    position = "bottomright",
    pal = pal,
    values = min_distances_km,
    title = "Distance to Highway (km)"
  ) %>%
  setView(lng = -80.782127, lat = 8.537981, zoom = 7)


```

```{r correlation-schools-ap, eval=FALSE, echo=FALSE}
# Calculate correlation between access points and schools considering spatial weights
ap_schools_correlation <- cor.test(
  district_data_complete$access_points,
  district_data_complete$schools
)

# And with density
ap_density_correlation <- cor.test(
  district_data_complete$access_points,
  district_data_complete$density
)

print("\nSpatial Correlations:")
print("Access Points vs Schools:")
print(ap_schools_correlation)
print("\nAccess Points vs Density:")
print(ap_density_correlation)
```


<br>

### School and Access Points Map

This map serves just to show the map that contains both access points and schools. We can see, how schools are uniformly distributed across the country, trying to serve a greater size of the population. On the other hand, access points are clustered in urban areas, serving more densed general population instead of schools.

```{r main-map, echo=FALSE}
leaflet() %>%
  addProviderTiles(providers$CartoDB.Positron) %>%
  # Districts with detailed popups
  addPolygons(
    data = district_data_complete,
    weight = 1,
    color = "red",
    fillOpacity = 0.4,
    popup = ~paste(
      "<b>District:</b>", NAME_2,
      "<br><b>Province:</b>", NAME_1,
      "<br><b>Population:</b>", population.x,
      "<br><b>Density:</b>", round(density, 2),
      "<br><b>Number of Schools:</b>", schools,
      "<br><b>Number of Access Points:</b>", access_points,
      "<br><b>AP per School:</b>", round(ap_per_school, 2),
      "<br><b>AP per 1000 People:</b>", round(ap_per_1000_people, 2)
    ),
    group = "Districts"
  ) %>%
  # Schools with detailed popups
  addCircleMarkers(
    data = schools_data,
    radius = 4,
    color = "blue",
    popup = ~paste(
      "<b>School:</b>", name,
      "<br><b>Province:</b>", province,
      "<br><b>District:</b>", district,
      "<br><b>County:</b>", county,
      "<br><b>Type:</b>", type
    ),
    group = "Schools"
  ) %>%
  # Access points with detailed popups
  addCircleMarkers(
    data = ap_data,
    radius = 4,
    color = "green",
    popup = ~paste(
      "<b>Location:</b>", name,
      "<br><b>Province:</b>", province,
      "<br><b>District:</b>", district,
      "<br><b>County:</b>", county,
      "<br><b>Type:</b>", type,
      "<br><b>Date:</b>", date
    ),
    group = "Access Points"
  ) %>%
  # Add layer controls
  addLayersControl(
    overlayGroups = c("Districts", "Schools", "Access Points"),
    options = layersControlOptions(collapsed = FALSE)
  )

```

<br>

## Conclusion

Access to public internet through access points are highly related to urban areas, where we find higher densities. Now, this is not to say that rural areas do not have access to internet. They do and mostly through satellite installation of internet. We have to understand that Panama is a country with high inequalities and most of the development is done specific urban areas: Panama City, Chiriqui, Santiago and Colon. Population densities differ one to other greatly as job opportunities and infrastructure differ greatly between districts. This research offers a better visual to policy makers about where to enhance better access to internet, specially to public schools. Our analysis suggests that rural areas would benefit more with satellite access points intallations across the ports and costs of the Atlantic, which lacks a high number of aps compared to the Pacific side. 