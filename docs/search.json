[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Public Internet Correlation between Population Density or Schools",
    "section": "",
    "text": "This research analyses whether public schools in Panama, get access to public internet via access points\n\nGoogle Satellite\nMigration Panama\n\n\n\n\nMostrar histograma por provincia, cantidad de access points y escuelas\nMostrar histoograma por distrito, cantidad de ap y escuelas\nver si puedo encontrar, que distritos tocan el panamerican highway\ncorrer una regresion?\nmeter data temporal de uso de datos por access points\nagregar datos de cantidad de estudiantes por distrito https://www.inec.gob.pa/archivos/P030194820231213142523Cuadro%2021.pdf\nagregar un indice normalizado (ya que el numero es muy chiquito) de la cantidad de casas sin internet https://www.inec.gob.pa/archivos/P0705547520240202111515Cuadro%201.pdf\n\nFuture: - indicadores socioeconomicos a nivel de distrito https://www.inec.gob.pa/archivos/P0579518620240202083001Cuadro%204.pdf -\nIt’s plain text so works well with version control - It can be rendered into HTML, PDF, and more - Learn more at: https://quarto.org/docs/authoring/\nConstruction Polygons (Satellite Data): Use Moran’s I to evaluate the spatial clustering of construction activities over time. Is construction clustering around migrant routes or reception centers? You could calculate Moran’s I for different years to observe changes in spatial autocorrelation patterns.\n\n\nCode\n#library\nlibrary(sf)\n\n\nLinking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.3.1; sf_use_s2() is TRUE\n\n\nCode\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(tmap)\n\n\nWarning: package 'tmap' was built under R version 4.4.2\n\n\nBreaking News: tmap 3.x is retiring. Please test v4, e.g. with\nremotes::install_github('r-tmap/tmap')\n\n\nCode\nlibrary(readr)\nlibrary(DT)\n\n\nWarning: package 'DT' was built under R version 4.4.2\n\n\nCode\nlibrary(skimr)\n\n\nWarning: package 'skimr' was built under R version 4.4.2\n\n\nCode\nlibrary(plotly)\n\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\n\nCode\nlibrary(leaflet)\n\n\n\n\nCode\n#functions\nconvert_dms_to_decimal &lt;- function(dms_str) {\n  # Extract components\n  parts &lt;- str_match(dms_str, \"(\\\\d+)° (\\\\d+)' (\\\\d+\\\\.?\\\\d*)\\\"\\\" ([N|S|E|W])\")\n  \n  # Convert components to numeric\n  degrees &lt;- as.numeric(parts[, 2])\n  minutes &lt;- as.numeric(parts[, 3])\n  seconds &lt;- as.numeric(parts[, 4])\n  \n  # Calculate decimal degrees\n  decimal &lt;- degrees + minutes/60 + seconds/3600\n  \n  # Apply sign based on direction\n  direction &lt;- parts[, 5]\n  decimal &lt;- ifelse(direction %in% c(\"S\", \"W\"), -decimal, decimal)\n  \n  return(decimal)\n}\n\n\n\n\nCode\n#schools data\nschools_csv &lt;- read.csv(\"data-spatial/schools-data.csv\")\n\n#district data\ndistrict_path &lt;- \"data-spatial/panama-districts/gadm41_PAN_2.json\"\n# Read GeoJSON data\ndistrict_data &lt;- st_read(district_path, quiet = TRUE)\n# Fix any invalid geometries\ndistrict_data &lt;- st_make_valid(district_data)\n\n#Panama highway\n# Read GeoJSON data\nhighway_data &lt;- st_read(\"data-spatial/panam-highway.geojson\", quiet = TRUE)\n\n#access points data\nap_csv &lt;- read.csv(\"data-spatial/access-points.csv\", fileEncoding=\"latin1\")\nap_data &lt;- st_as_sf(ap_csv, \n                      coords = c(\"long\", \"lat\"),\n                      crs = 4326)\n\n\n\n\nCode\n#Cleaning data\n\n# Convert your coordinates\nschools_csv$decimal_lat &lt;- convert_dms_to_decimal(schools_csv$lat)\nschools_csv$decimal_long &lt;- convert_dms_to_decimal(schools_csv$long)\n\n#removing long, lat columns and creating schools_df\nschools_df &lt;- schools_csv %&gt;% select(-lat) %&gt;% select(-long)\n\n# Create SF object with converted coordinates from schools_df\nschools_data &lt;- st_as_sf(schools_df, \n                      coords = c(\"decimal_long\", \"decimal_lat\"),\n                      crs = 4326)\n\n\n\n\nCode\nrm(schools_csv, district_path, ap_csv, schools_df)\n\n\n\n\nCode\n#province summary\nprovince_summary &lt;- schools_data %&gt;%\n  st_drop_geometry() %&gt;%\n  group_by(province) %&gt;%\n  summarise(schools = n()) %&gt;%\n  full_join(\n    ap_data %&gt;%\n      st_drop_geometry() %&gt;%\n      group_by(province) %&gt;%\n      summarise(access_points = n()),\n    by = \"province\"\n  ) %&gt;%\n  full_join(\n    district_data %&gt;%\n      st_drop_geometry() %&gt;%\n      group_by(NAME_1) %&gt;%\n      summarise(population = sum(population)),\n    by = c(\"province\" = \"NAME_1\")\n  ) %&gt;%\n  mutate(\n    ap_per_school = round(access_points/schools, 2),\n    ap_per_1000_people = round((access_points/population) * 1000, 2)\n  )\n\n\n#district summary\ndistrict_summary &lt;- schools_data %&gt;%\n  st_drop_geometry() %&gt;%  # Remove spatial component\n  group_by(district) %&gt;%\n  summarise(schools = n()) %&gt;%\n  full_join(\n    ap_data %&gt;%\n      st_drop_geometry() %&gt;%  # Remove spatial component\n      group_by(district) %&gt;%\n      summarise(access_points = n()),\n    by = \"district\"\n  ) %&gt;%\n  full_join(\n    district_data %&gt;%\n      st_drop_geometry() %&gt;%\n      select(NAME_2, population),\n    by = c(\"district\" = \"NAME_2\")\n  ) %&gt;%\n  mutate(\n    access_points = coalesce(access_points, 0),  # Replace NA with 0\n    ap_per_school = round(access_points/schools, 2),\n    ap_per_1000_people = round((access_points/population) * 1000, 2)  \n  )\n\ndistrict_summary &lt;- district_summary %&gt;%\n  filter(!is.na(population), !is.na(access_points)) %&gt;%\n  arrange(district) \n\n\ndatatable(province_summary,\n          colnames = c(\"Province\", \"Number of Schools\", \"Number of Access Points\", \"Population\", \"AP per School\", \"AP per 1000 people\"),\n          options = list(pageLength = 20))\n\n\n\n\n\n\nCode\ndatatable(district_summary,\n          colnames = c(\"District\", \"Number of Schools\", \"Number of Access Points\", \"Population\", \"AP per School\", \"AP per 1000 people\"),\n          options = list(pageLength = 20))\n\n\n\n\n\n\nCode\nprovince_summary\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprovince\nschools\naccess_points\npopulation\nap_per_school\nap_per_1000_people\n\n\n\n\nBocas del Toro\n166\n54\n113871.0\n0.33\n0.47\n\n\nChiriqui\n460\n227\n447546.0\n0.49\n0.51\n\n\nCocle\n343\n160\n268264.0\n0.47\n0.60\n\n\nColon\n201\n70\n278395.0\n0.35\n0.25\n\n\nComarca Embera\n39\n3\n12358.0\n0.08\n0.24\n\n\nComarca Kuna Yala\n48\n7\n32016.0\n0.15\n0.22\n\n\nComarca Ngobe Bugle\n307\n23\n129165.5\n0.07\n0.18\n\n\nDarien\n154\n36\n34506.0\n0.23\n1.04\n\n\nHerrera\n200\n65\n117786.0\n0.32\n0.55\n\n\nLos Santos\n176\n70\n98466.0\n0.40\n0.71\n\n\nPanama\n640\n377\n1439575.0\n0.59\n0.26\n\n\nVeraguas\n500\n110\n236944.2\n0.22\n0.46\n\n\nPanama Oeste\nNA\n103\n653665.0\nNA\n0.16\n\n\n\n\n\n\nCode\ndistrict_summary\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndistrict\nschools\naccess_points\npopulation\nap_per_school\nap_per_1000_people\n\n\n\n\nAguadulce\n32\n30\n49005.0\n0.94\n0.61\n\n\nAlanje\n22\n7\n18877.0\n0.32\n0.37\n\n\nAnton\n46\n27\n59194.0\n0.59\n0.46\n\n\nArraijan\n42\n43\n299079.0\n1.02\n0.14\n\n\nAtalaya\n14\n3\n17507.0\n0.21\n0.17\n\n\nBalboa\n9\n0\n1989.0\n0.00\n0.00\n\n\nBaru\n83\n38\n56307.0\n0.46\n0.67\n\n\nBesiko\n34\n1\n31422.0\n0.03\n0.03\n\n\nBocas del Toro\n35\n6\n285.0\n0.17\n21.05\n\n\nBoqueron\n24\n8\n21001.0\n0.33\n0.38\n\n\nBoquete\n20\n7\n23562.0\n0.35\n0.30\n\n\nBugaba\n79\n45\n68870.0\n0.57\n0.65\n\n\nCalobre\n45\n2\n11666.0\n0.04\n0.17\n\n\nCapira\n78\n14\n45629.0\n0.18\n0.31\n\n\nCañazas\n63\n1\n16933.0\n0.02\n0.06\n\n\nCemaco\n28\n3\n9547.0\n0.11\n0.31\n\n\nChagres\n37\n3\n10968.0\n0.08\n0.27\n\n\nChame\n26\n12\n28535.0\n0.46\n0.42\n\n\nChanguinola\n109\n41\n101091.0\n0.38\n0.41\n\n\nChepigana\n114\n22\n12983.0\n0.19\n1.69\n\n\nChepo\n105\n32\n65588.0\n0.30\n0.49\n\n\nChiman\n17\n0\n3142.0\n0.00\n0.00\n\n\nChiriqui Grande\n22\n7\n12495.0\n0.32\n0.56\n\n\nChitre\n17\n33\n60957.0\n1.94\n0.54\n\n\nColon\n89\n57\n240722.0\n0.64\n0.24\n\n\nComarca Kuna Yala\n48\n7\n32016.0\n0.15\n0.22\n\n\nDavid\n77\n58\n156498.0\n0.75\n0.37\n\n\nDolega\n26\n17\n37678.0\n0.65\n0.45\n\n\nDonoso\n52\n3\n12274.0\n0.06\n0.24\n\n\nGualaca\n23\n5\n9831.0\n0.22\n0.51\n\n\nGuarare\n17\n11\n12107.0\n0.65\n0.91\n\n\nKankintu\n68\n2\n19751.0\n0.03\n0.10\n\n\nKusapin\n50\n3\n17047.0\n0.06\n0.18\n\n\nLa Chorrera\n73\n26\n258221.0\n0.36\n0.10\n\n\nLa Mesa\n29\n8\n12238.0\n0.28\n0.65\n\n\nLa Pintada\n66\n22\n29698.0\n0.33\n0.74\n\n\nLas Minas\n43\n2\n6642.0\n0.05\n0.30\n\n\nLas Palmas\n53\n4\n1015.2\n0.08\n3.94\n\n\nLas Tablas\n39\n20\n30440.0\n0.51\n0.66\n\n\nLos Pozos\n36\n4\n6928.0\n0.11\n0.58\n\n\nLos Santos\n28\n16\n30028.0\n0.57\n0.53\n\n\nMacaracas\n34\n4\n8965.0\n0.12\n0.45\n\n\nMirono\n32\n1\n21800.0\n0.03\n0.05\n\n\nMontijo\n43\n3\n6784.0\n0.07\n0.44\n\n\nMuna\n70\n8\n799.5\n0.11\n10.01\n\n\nNata\n30\n12\n19741.0\n0.40\n0.61\n\n\nNole Duima\n20\n4\n20709.0\n0.20\n0.19\n\n\nOcu\n50\n11\n16116.0\n0.22\n0.68\n\n\nOla\n22\n4\n6300.0\n0.18\n0.63\n\n\nPanama\n207\n278\n1086990.0\n1.34\n0.26\n\n\nParita\n13\n3\n9695.0\n0.23\n0.31\n\n\nPedasi\n9\n11\n4942.0\n1.22\n2.23\n\n\nPenonome\n147\n65\n104326.0\n0.44\n0.62\n\n\nPese\n31\n7\n8724.0\n0.23\n0.80\n\n\nPinogana\n40\n14\n21523.0\n0.35\n0.65\n\n\nPocri\n14\n5\n3025.0\n0.36\n1.65\n\n\nPortobelo\n13\n4\n10320.0\n0.31\n0.39\n\n\nRemedios\n5\n4\n4388.0\n0.80\n0.91\n\n\nRenacimiento\n38\n20\n22429.0\n0.53\n0.89\n\n\nRio de Jesus\n13\n3\n4822.0\n0.23\n0.62\n\n\nSambu\n11\n0\n2811.0\n0.00\n0.00\n\n\nSan Carlos\n25\n8\n22201.0\n0.32\n0.36\n\n\nSan Felix\n8\n6\n6881.0\n0.75\n0.87\n\n\nSan Francisco\n30\n4\n10107.0\n0.13\n0.40\n\n\nSan Lorenzo\n16\n7\n8031.0\n0.44\n0.87\n\n\nSan Miguelito\n56\n65\n280777.0\n1.16\n0.23\n\n\nSanta Fe\n39\n4\n18023.0\n0.10\n0.22\n\n\nSanta Isabel\n10\n3\n4111.0\n0.30\n0.73\n\n\nSanta Maria\n10\n5\n8724.0\n0.50\n0.57\n\n\nSantiago\n91\n51\n109605.0\n0.56\n0.47\n\n\nSona\n78\n23\n28244.0\n0.29\n0.81\n\n\nTaboga\n2\n2\n1089.0\n1.00\n1.84\n\n\nTole\n39\n5\n13193.0\n0.13\n0.38\n\n\nTonosi\n35\n3\n8959.0\n0.09\n0.33\n\n\nÑurum\n32\n4\n17637.0\n0.12\n0.23\n\n\n\n\n\n\n\n\nCode\ndistrict_summary &lt;- district_summary %&gt;%\n  filter(!is.na(population), !is.na(access_points)) %&gt;%\n  arrange(district) \n\n\nplot_ly(district_summary, \n        x = ~population, \n        y = ~access_points,\n        type = 'scatter',\n        mode = 'markers',\n        marker = list(\n          size = 10,\n          color = 'rgb(49,130,189)',\n          opacity = 0.7,\n          line = list(color = 'rgb(27,71,105)', width = 1)\n        ),\n        text = ~district,\n        hovertemplate = paste(\n          '&lt;b&gt;District:&lt;/b&gt; %{text}&lt;br&gt;',\n          '&lt;b&gt;Population:&lt;/b&gt; %{x:,}&lt;br&gt;',\n          '&lt;b&gt;Access Points:&lt;/b&gt; %{y}&lt;br&gt;',\n          '&lt;b&gt;Schools:&lt;/b&gt; ', district_summary$schools, '&lt;br&gt;',\n          '&lt;b&gt;AP per School:&lt;/b&gt; ', district_summary$ap_per_school,\n          '&lt;extra&gt;&lt;/extra&gt;'\n        )\n) %&gt;%\n  add_lines(x = ~population,\n            y = ~fitted(lm(access_points ~ population, data = district_summary)),\n            line = list(color = 'rgb(219,64,82)',\n                       width = 2,\n                       dash = 'dash'),\n            showlegend = TRUE,\n            name = 'Trend line') %&gt;%\n  layout(\n    title = list(\n      text = \"Access Points vs Population by District\",\n      font = list(size = 24)\n    ),\n    xaxis = list(\n      title = \"Population\",\n      gridcolor = 'rgb(255,255,255)',\n      gridwidth = 2,\n      showgrid = TRUE,\n      zeroline = FALSE\n    ),\n    yaxis = list(\n      title = \"Number of Access Points\",\n      gridcolor = 'rgb(255,255,255)',\n      gridwidth = 2,\n      showgrid = TRUE,\n      zeroline = FALSE\n    ),\n    paper_bgcolor = 'rgb(251,251,251)',\n    plot_bgcolor = 'rgb(251,251,251)',\n    showlegend = TRUE\n  )\n\n\nA marker object has been specified, but markers is not in the mode\nAdding markers to the mode...\n\n\n\n\n\n\n\n\nCode\nlibrary(plotly)\n\n# Create side-by-side plots\nsubplot(\n  # Left plot: Access Points vs Population\n  plot_ly(district_summary, \n          x = ~population, \n          y = ~access_points,\n          type = 'scatter',\n          mode = 'markers',\n          marker = list(\n            size = 10,\n            color = 'rgb(49,130,189)',\n            opacity = 0.7,\n            line = list(color = 'rgb(27,71,105)', width = 1)\n          ),\n          text = ~district,\n          hovertemplate = paste(\n            '&lt;b&gt;District:&lt;/b&gt; %{text}&lt;br&gt;',\n            '&lt;b&gt;Population:&lt;/b&gt; %{x:,}&lt;br&gt;',\n            '&lt;b&gt;Access Points:&lt;/b&gt; %{y}&lt;br&gt;',\n            '&lt;extra&gt;&lt;/extra&gt;'\n          )\n  ) %&gt;%\n    add_lines(x = ~population,\n              y = ~fitted(lm(access_points ~ population, data = district_summary)),\n              line = list(color = 'rgb(219,64,82)',\n                         width = 2,\n                         dash = 'dash'),\n              showlegend = TRUE,\n              name = 'Access Points Trend') %&gt;%\n    layout(\n      title = \"Access Points vs Population\",\n      xaxis = list(\n        title = \"Population\",\n        gridcolor = 'rgb(255,255,255)',\n        gridwidth = 2,\n        showgrid = TRUE,\n        zeroline = FALSE\n      ),\n      yaxis = list(\n        title = \"Number of Access Points\",\n        gridcolor = 'rgb(255,255,255)',\n        gridwidth = 2,\n        showgrid = TRUE,\n        zeroline = FALSE\n      ),\n      paper_bgcolor = 'rgb(251,251,251)',\n      plot_bgcolor = 'rgb(251,251,251)'\n    ),\n  \n  # Right plot: Access Points per School\n  plot_ly(district_summary, \n          x = ~population, \n          y = ~ap_per_school,\n          type = 'scatter',\n          mode = 'markers',\n          marker = list(\n            size = 10,\n            color = 'rgb(50,205,50)',\n            opacity = 0.7,\n            line = list(color = 'rgb(0,100,0)', width = 1)\n          ),\n          text = ~district,\n          hovertemplate = paste(\n            '&lt;b&gt;District:&lt;/b&gt; %{text}&lt;br&gt;',\n            '&lt;b&gt;Population:&lt;/b&gt; %{x:,}&lt;br&gt;',\n            '&lt;b&gt;Access Points per School:&lt;/b&gt; %{y:.2f}&lt;br&gt;',\n            '&lt;b&gt;Total Schools:&lt;/b&gt; ', district_summary$schools, '&lt;br&gt;',\n            '&lt;extra&gt;&lt;/extra&gt;'\n          )\n  ) %&gt;%\n    add_lines(x = ~population,\n              y = ~fitted(lm(ap_per_school ~ population, data = district_summary)),\n              line = list(color = 'rgb(255,69,0)',\n                         width = 2,\n                         dash = 'dash'),\n              showlegend = TRUE,\n              name = 'AP per School Trend') %&gt;%\n    layout(\n      title = \"Access Points per School vs Population\",\n      xaxis = list(\n        title = \"Population\",\n        gridcolor = 'rgb(255,255,255)',\n        gridwidth = 2,\n        showgrid = TRUE,\n        zeroline = FALSE\n      ),\n      yaxis = list(\n        title = \"Access Points per School\",\n        gridcolor = 'rgb(255,255,255)',\n        gridwidth = 2,\n        showgrid = TRUE,\n        zeroline = FALSE\n      ),\n      paper_bgcolor = 'rgb(251,251,251)',\n      plot_bgcolor = 'rgb(251,251,251)'\n    ),\n  \n  # Subplot layout\n  nrows = 1,\n  shareX = TRUE,\n  titleX = TRUE\n)\n\n\nA marker object has been specified, but markers is not in the mode\nAdding markers to the mode...\nA marker object has been specified, but markers is not in the mode\nAdding markers to the mode...\n\n\n\n\n\n\n\n\nCode\n# Run linear regression\nmodel &lt;- lm(access_points ~ population, data = district_summary)\n\n# View summary of regression results\nsummary(model)\n\n\n\nCall:\nlm(formula = access_points ~ population, data = district_summary)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-41.413  -4.688  -2.250   3.524  34.859 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 4.874e+00  1.302e+00   3.743  0.00036 ***\npopulation  2.422e-04  8.992e-06  26.934  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 10.54 on 73 degrees of freedom\nMultiple R-squared:  0.9086,    Adjusted R-squared:  0.9073 \nF-statistic: 725.5 on 1 and 73 DF,  p-value: &lt; 2.2e-16\n\n\nCode\n# For a more detailed analysis, we can also include additional variables\nmodel_extended &lt;- lm(access_points ~ population + schools, data = district_summary)\nsummary(model_extended)\n\n\n\nCall:\nlm(formula = access_points ~ population + schools, data = district_summary)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-40.368  -3.912   0.572   4.103  19.345 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -2.568e+00  1.772e+00  -1.449    0.152    \npopulation   2.058e-04  1.021e-05  20.171  &lt; 2e-16 ***\nschools      2.162e-01  4.019e-02   5.379 8.89e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.962 on 72 degrees of freedom\nMultiple R-squared:  0.9348,    Adjusted R-squared:  0.933 \nF-statistic:   516 on 2 and 72 DF,  p-value: &lt; 2.2e-16\n\n\n\n\nCode\n# Create the map\nap_map &lt;- leaflet(ap_data) %&gt;%\n  # Add base map tiles\n  addProviderTiles(providers$CartoDB.Positron) %&gt;%\n  # Add access points\n  addCircleMarkers(\n    radius = 5,\n    color = \"blue\",\n    fillColor = \"blue\",\n    fillOpacity = 0.6,\n    stroke = TRUE,\n    weight = 1,\n    popup = ~paste(\n      \"&lt;strong&gt;Location:&lt;/strong&gt;\", name, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Province:&lt;/strong&gt;\", province, \"&lt;br&gt;\",\n      \"&lt;strong&gt;District:&lt;/strong&gt;\", district, \"&lt;br&gt;\",\n      \"&lt;strong&gt;County:&lt;/strong&gt;\", county, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Type:&lt;/strong&gt;\", type, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Date:&lt;/strong&gt;\", date\n    ),\n    # Enable clustering to handle many points\n    clusterOptions = markerClusterOptions()\n  ) %&gt;%\n  # Set the initial view to Panama\n  setView(lng = -80.782127, lat = 8.537981, zoom = 7)\n\nap_map\n\n\n\n\n\n\n\n\nCode\ndistrict_data_merged &lt;- district_data %&gt;%\n  left_join(district_summary, by = c(\"NAME_2\" = \"district\"))\n\n\nbreaks &lt;- c(1, 10, 50, 100, 200, max(district_data_merged$access_points))\npal &lt;- colorBin(\n  palette = \"RdYlGn\",\n  domain = district_data_merged$access_points,\n  bins = breaks,\n  reverse = FALSE\n)\n\n# Create the map\nleaflet(district_data_merged) %&gt;%\n  addProviderTiles(providers$CartoDB.DarkMatter) %&gt;%\n  addPolygons(\n    fillColor = ~pal(access_points),\n    fillOpacity = 0.7,\n    weight = 1,\n    color = \"#666\",\n    highlightOptions = highlightOptions(\n      weight = 2,\n      color = \"#666\",\n      fillOpacity = 0.9,\n      bringToFront = TRUE\n    ),\n    popup = ~paste(\n      \"&lt;strong&gt;District:&lt;/strong&gt;\", NAME_2, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Province:&lt;/strong&gt;\", NAME_1, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Access Points:&lt;/strong&gt;\", access_points, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Schools:&lt;/strong&gt;\", schools\n    )\n  ) %&gt;%\n  addLegend(\n    position = \"bottomright\",\n    pal = pal,\n    values = ~access_points,\n    title = \"Number of Access Points\",\n    opacity = 0.7,\n    labFormat = labelFormat(digits = 0)  # Show integers only\n  ) %&gt;%\n  setView(lng = -80.782127, lat = 8.537981, zoom = 7)\n\n\nWarning in pal(access_points): Some values were outside the color scale and\nwill be treated as NA\n\n\n\n\n\n\n\n\nCode\nlibrary(osmdata)\n\n\nWarning: package 'osmdata' was built under R version 4.4.2\n\n\nData (c) OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright\n\n\nCode\nlibrary(sf)\n\npanama_bb &lt;- getbb(\"Panama\")\nhighway &lt;- opq(panama_bb) %&gt;%\n  add_osm_feature(key = \"name\", value = \"Carretera Panamericana\") %&gt;%\n  osmdata_sf()\n\nleaflet() %&gt;%\n  addProviderTiles(providers$CartoDB.DarkMatter) %&gt;%\n  addPolylines(\n    data = highway$osm_lines,  # Using the lines from your downloaded data\n    color = \"red\",\n    weight = 2,\n    opacity = 0.8,\n    popup = ~name  # This will show the road name when clicked\n  ) %&gt;%\n  setView(lng = -80.782127, lat = 8.537981, zoom = 7)\n\n\n\n\n\n\n\n\nCode\npal &lt;- colorFactor(\n  palette = \"Set3\",\n  domain = unique(schools_data$type)\n)\n\nleaflet() %&gt;%\n  # Add a base map (you can change the provider as we discussed)\n  addProviderTiles(providers$CartoDB.DarkMatter) %&gt;%\n  # Add school points with clustering\n  addCircleMarkers(\n    data = schools_data,\n    radius = 6,\n    color = ~pal(type),\n    fillOpacity = 1,\n    stroke = TRUE,\n    weight = 1,\n    popup = ~paste(\n      \"&lt;strong&gt;School:&lt;/strong&gt;\", name, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Type:&lt;/strong&gt;\", type, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Province:&lt;/strong&gt;\", province, \"&lt;br&gt;\",\n      \"&lt;strong&gt;District:&lt;/strong&gt;\", district, \"&lt;br&gt;\",\n      \"&lt;strong&gt;County:&lt;/strong&gt;\", county\n    ),\n    clusterOptions = markerClusterOptions()\n  ) %&gt;%\n  addLegend(\n    position = \"bottomright\",\n    pal = pal,\n    values = schools_data$type,\n    title = \"School Type\"\n  ) %&gt;%\n  # Set the initial view to Panama\n  setView(lng = -80.782127, lat = 8.537981, zoom = 7)\n\n\n\n\n\n\n\n\nCode\ndistricts_with_highway &lt;- st_intersection(district_data, highway$osm_lines)\n\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\n\nCode\nhighway_districts &lt;- unique(districts_with_highway$NAME_2)\n\n\nleaflet() %&gt;%\n  addProviderTiles(providers$CartoDB.DarkMatter) %&gt;%\n  # Add all districts in light gray\n  addPolygons(\n    data = district_data,\n    fillColor = \"lightgray\",\n    fillOpacity = 0.3,\n    weight = 1,\n    color = \"gray\"\n  ) %&gt;%\n  # Highlight districts with highway in blue\n  addPolygons(\n    data = district_data[district_data$NAME_2 %in% highway_districts,],\n    fillColor = \"yellow\",\n    fillOpacity = 0.3,\n    weight = 1,\n    color = \"blue\",\n    popup = ~NAME_2\n  ) %&gt;%\n  # Add the highway in red\n  addPolylines(\n    data = highway$osm_lines,\n    color = \"red\",\n    weight = 2\n  ) %&gt;%\n  setView(lng = -80.782127, lat = 8.537981, zoom = 7)\n\n\n\n\n\n\n\n\nCode\nlibrary(spdep)\n\n\nWarning: package 'spdep' was built under R version 4.4.2\n\n\nLoading required package: spData\n\n\nTo access larger datasets in this package, install the spDataLarge\npackage with: `install.packages('spDataLarge',\nrepos='https://nowosad.github.io/drat/', type='source')`\n\n\nCode\ndistrict_data_complete &lt;- merge(district_data, \n                              district_summary, \n                              by.x = \"NAME_2\", \n                              by.y = \"district\")\n# 1. Create a neighbors list based on district boundaries\n# Queens case (districts sharing any boundary point)\nnb &lt;- poly2nb(district_data_complete, queen = TRUE)\n\n\nWarning in poly2nb(district_data_complete, queen = TRUE): some observations have no neighbours;\nif this seems unexpected, try increasing the snap argument.\n\n\nWarning in poly2nb(district_data_complete, queen = TRUE): neighbour object has 3 sub-graphs;\nif this sub-graph count seems unexpected, try increasing the snap argument.\n\n\nCode\n# 2. Create spatial weights\nw &lt;- nb2listw(nb, style = \"W\", zero.policy = TRUE)\n\n# Now calculate Moran's I with zero.policy=TRUE\nmoran_test &lt;- moran.test(district_data_complete$access_points, w, zero.policy = TRUE)\nprint(moran_test)\n\n\n\n    Moran I test under randomisation\n\ndata:  district_data_complete$access_points  \nweights: w  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 4.7929, p-value = 8.218e-07\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.229408902      -0.013888889       0.002576752 \n\n\nCode\n# For visualization\nmoran.plot(district_data_complete$access_points, w, \n          labels = district_data_complete$NAME_2,\n          xlab = \"Access Points\",\n          ylab = \"Spatially Lagged Access Points\",\n          zero.policy = TRUE)\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Calculate local Moran's I\nlocal_moran &lt;- localmoran(district_data_complete$access_points, w, zero.policy = TRUE)\n\n# Add results to your spatial dataframe\ndistrict_data_complete$local_moran &lt;- local_moran[, 1]\ndistrict_data_complete$local_moran_p &lt;- local_moran[, 5]\n\n# Map it\nleaflet(district_data_complete) %&gt;%\n  addProviderTiles(providers$CartoDB.Positron) %&gt;%\n  addPolygons(\n    fillColor = ~colorNumeric(\"RdYlBu\", local_moran)(local_moran),\n    fillOpacity = 0.7,\n    weight = 1,\n    color = \"white\",\n    popup = ~paste(\n      \"&lt;strong&gt;District:&lt;/strong&gt;\", NAME_2,\n      \"&lt;br&gt;&lt;strong&gt;Local Moran's I:&lt;/strong&gt;\", round(local_moran, 3),\n      \"&lt;br&gt;&lt;strong&gt;Access Points:&lt;/strong&gt;\", access_points\n    )\n  ) %&gt;%\n  addLegend(\n    position = \"bottomright\",\n    pal = colorNumeric(\"RdYlBu\", local_moran[,1]),\n    values = local_moran[,1],\n    title = \"Local Moran's I\"\n  )\n\n\n\n\n\n\n\n\nCode\nlibrary(spdep)\n\n# 1. Access Points and Schools relationship\n# Standardize the variables\nz_ap &lt;- scale(district_data_complete$access_points)\nz_schools &lt;- scale(district_data_complete$schools)\n\n# Calculate Moran's I for Access Points vs Schools\nmoran_ap_schools &lt;- moran.test(district_data_complete$access_points, \n                              nb2listw(nb, style=\"W\", zero.policy=TRUE), \n                              zero.policy=TRUE)\n\nprint(\"Moran's I for Access Points vs Schools:\")\n\n\n[1] \"Moran's I for Access Points vs Schools:\"\n\n\nCode\nprint(moran_ap_schools)\n\n\n\n    Moran I test under randomisation\n\ndata:  district_data_complete$access_points  \nweights: nb2listw(nb, style = \"W\", zero.policy = TRUE)  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 4.7929, p-value = 8.218e-07\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.229408902      -0.013888889       0.002576752 \n\n\nCode\n# 2. Access Points and Density relationship\n# Standardize density\nz_density &lt;- scale(district_data_complete$density)\n\n# Calculate Moran's I for Access Points vs Density\nmoran_ap_density &lt;- moran.test(district_data_complete$density, \n                              nb2listw(nb, style=\"W\", zero.policy=TRUE), \n                              zero.policy=TRUE)\n\nprint(\"Moran's I for Access Points vs Density:\")\n\n\n[1] \"Moran's I for Access Points vs Density:\"\n\n\nCode\nprint(moran_ap_density)\n\n\n\n    Moran I test under randomisation\n\ndata:  district_data_complete$density  \nweights: nb2listw(nb, style = \"W\", zero.policy = TRUE)  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 5.813, p-value = 3.068e-09\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.1008972152     -0.0138888889      0.0003899232 \n\n\nCode\n# Create visualization plots\npar(mfrow=c(1,2))  # Set up a 1x2 plotting area\n\n# Plot for Access Points vs Schools\nmoran.plot(district_data_complete$access_points, \n          nb2listw(nb, style=\"W\", zero.policy=TRUE),\n          labels=district_data_complete$NAME_2,\n          xlab=\"Access Points\",\n          ylab=\"Spatially Lagged Access Points\",\n          main=\"Access Points vs Schools\",\n          zero.policy=TRUE)\n\n# Plot for Access Points vs Density\nmoran.plot(district_data_complete$density, \n          nb2listw(nb, style=\"W\", zero.policy=TRUE),\n          labels=district_data_complete$NAME_2,\n          xlab=\"Population Density\",\n          ylab=\"Spatially Lagged Density\",\n          main=\"Access Points vs Density\",\n          zero.policy=TRUE)\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Calculate ratio of access points to density\ndistrict_data_complete$ap_per_density &lt;- district_data_complete$access_points / district_data_complete$density\n\n# Calculate Moran's I\nmoran_density &lt;- moran.test(district_data_complete$ap_per_density, w, zero.policy = TRUE)\nprint(\"Moran's I for Access Points relative to Population Density:\")\n\n\n[1] \"Moran's I for Access Points relative to Population Density:\"\n\n\nCode\nprint(moran_density)\n\n\n\n    Moran I test under randomisation\n\ndata:  district_data_complete$ap_per_density  \nweights: w  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 4.3008, p-value = 8.51e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.208806834      -0.013888889       0.002681206 \n\n\nCode\n# Calculate ratio of access points to schools\ndistrict_data_complete$ap_per_school &lt;- district_data_complete$access_points / district_data_complete$schools\n\n# Calculate Moran's I\nmoran_schools &lt;- moran.test(district_data_complete$ap_per_school, w, zero.policy = TRUE)\nprint(\"Moran's I for Access Points relative to Schools:\")\n\n\n[1] \"Moran's I for Access Points relative to Schools:\"\n\n\nCode\nprint(moran_schools)\n\n\n\n    Moran I test under randomisation\n\ndata:  district_data_complete$ap_per_school  \nweights: w  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 3.1227, p-value = 0.0008959\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.229109922      -0.013888889       0.006055367 \n\n\n\n\nCode\n# Set up to display two Moran plots side by side\npar(mfrow=c(1,2))\n\n# Plot for Access Points per Density\nmoran.plot(district_data_complete$ap_per_density, \n         w,\n         labels=district_data_complete$NAME_2,\n         xlab=\"Access Points per Density\",\n         ylab=\"Spatially Lagged AP per Density\",\n         main=\"Access Points per Density\",\n         zero.policy=TRUE)\n\n# Plot for Access Points per School\nmoran.plot(district_data_complete$ap_per_school, \n         w,\n         labels=district_data_complete$NAME_2,\n         xlab=\"Access Points per School\",\n         ylab=\"Spatially Lagged AP per School\",\n         main=\"Access Points per School\",\n         zero.policy=TRUE)\n\n\n\n\n\n\n\n\n\nCode\n# Reset plotting parameters\npar(mfrow=c(1,1))\n\n# Let's also create choropleth maps to visualize these ratios\n# Map for AP per Density\nleaflet() %&gt;%\n addProviderTiles(providers$CartoDB.Positron) %&gt;%\n # First map: AP per Density\n addPolygons(\n   data = district_data_complete,\n   fillColor = ~colorNumeric(\"viridis\", ap_per_density)(ap_per_density),\n   fillOpacity = 0.7,\n   weight = 1,\n   color = \"white\",\n   popup = ~paste(\n     \"&lt;strong&gt;District:&lt;/strong&gt;\", NAME_2,\n     \"&lt;br&gt;&lt;strong&gt;AP per Density:&lt;/strong&gt;\", round(ap_per_density, 4)\n   )\n ) \n\n\n\n\n\n\nCode\n# Map for AP per School\nleaflet() %&gt;%\n addProviderTiles(providers$CartoDB.Positron) %&gt;%\n # Second map: AP per School\n addPolygons(\n   data = district_data_complete,\n   fillColor = ~colorNumeric(\"viridis\", ap_per_school)(ap_per_school),\n   fillOpacity = 0.7,\n   weight = 1,\n   color = \"white\",\n   popup = ~paste(\n     \"&lt;strong&gt;District:&lt;/strong&gt;\", NAME_2,\n     \"&lt;br&gt;&lt;strong&gt;AP per School:&lt;/strong&gt;\", round(ap_per_school, 4)\n   )\n ) \n\n\n\n\n\n\n\n\nCode\nlibrary(spatstat)\n\n\nWarning: package 'spatstat' was built under R version 4.4.2\n\n\nLoading required package: spatstat.data\n\n\nWarning: package 'spatstat.data' was built under R version 4.4.2\n\n\nLoading required package: spatstat.univar\n\n\nWarning: package 'spatstat.univar' was built under R version 4.4.2\n\n\nspatstat.univar 3.1-1\n\n\nLoading required package: spatstat.geom\n\n\nWarning: package 'spatstat.geom' was built under R version 4.4.2\n\n\nspatstat.geom 3.3-4\n\n\nLoading required package: spatstat.random\n\n\nWarning: package 'spatstat.random' was built under R version 4.4.2\n\n\nspatstat.random 3.3-2\n\n\nLoading required package: spatstat.explore\n\n\nWarning: package 'spatstat.explore' was built under R version 4.4.2\n\n\nLoading required package: nlme\n\n\n\nAttaching package: 'nlme'\n\n\nThe following object is masked from 'package:dplyr':\n\n    collapse\n\n\nspatstat.explore 3.3-3\n\n\nLoading required package: spatstat.model\n\n\nWarning: package 'spatstat.model' was built under R version 4.4.2\n\n\nLoading required package: rpart\n\n\nspatstat.model 3.3-3\n\n\nLoading required package: spatstat.linnet\n\n\nWarning: package 'spatstat.linnet' was built under R version 4.4.2\n\n\nspatstat.linnet 3.2-3\n\n\n\nspatstat 3.3-0 \nFor an introduction to spatstat, type 'beginner' \n\n\nCode\nlibrary(sf)\n\n# First, transform both datasets to UTM Zone 17N (EPSG:32617)\nschools_projected &lt;- st_transform(schools_data, 32617)\nap_projected &lt;- st_transform(ap_data, 32617)\ndistrict_projected &lt;- st_transform(district_data, 32617)\n\n# Create the observation window\nwindow &lt;- as.owin(st_union(district_projected))\n\n# Create point pattern objects for both schools and access points\nschools_coords &lt;- st_coordinates(schools_projected)\nap_coords &lt;- st_coordinates(ap_projected)\n\n# Create a marked point pattern with both types of points\npoints_combined &lt;- ppp(\n  x = c(schools_coords[,1], ap_coords[,1]),\n  y = c(schools_coords[,2], ap_coords[,2]),\n  marks = factor(c(rep(\"school\", nrow(schools_coords)),\n                  rep(\"ap\", nrow(ap_coords)))),\n  window = window\n)\n\n\nWarning: 49 points were rejected as lying outside the specified window\n\n\nWarning: data contain duplicated points\n\n\nCode\n# Calculate cross-type pair correlation function\ncross_pcf &lt;- pcfcross(points_combined, \"school\", \"ap\", correction = \"translate\")\n\n# Plot the cross-type pair correlation function\nplot(cross_pcf, main = \"Cross-type PCF: Schools vs Access Points\",\n     xlab = \"Distance (m)\", ylab = \"g(r)\")\nabline(h = 1, lty = 2)  # Add reference line at g(r) = 1\n\n\n\n\n\n\n\n\n\nCode\n# Calculate cross-type K function\ncross_K &lt;- Kcross(points_combined, \"school\", \"ap\", correction = \"border\")\n\n# Plot the cross-type K function\nplot(cross_K, main = \"Cross-type K function: Schools vs Access Points\",\n     xlab = \"Distance (m)\")\n\n\n\n\n\n\n\n\n\nCode\n# Calculate cross-type L function\ncross_L &lt;- Lcross(points_combined, \"school\", \"ap\", correction = \"border\")\n\n# Plot the cross-type L function\nplot(cross_L, main = \"Cross-type L function: Schools vs Access Points\",\n     xlab = \"Distance (m)\")\n\n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(sf)\n\n# First project to UTM for accurate buffer creation\nhighway_projected &lt;- st_transform(highway$osm_lines, 32617)  # UTM 17N\nap_projected &lt;- st_transform(ap_data, 32617)\n\n# Create buffers in UTM\nbuffer_5km &lt;- st_buffer(highway_projected, 5000)\nbuffer_10km &lt;- st_buffer(highway_projected, 10000)\n\n# Transform everything back to WGS84 for mapping\nhighway_wgs84 &lt;- st_transform(highway_projected, 4326)\nap_wgs84 &lt;- st_transform(ap_projected, 4326)\nbuffer_5km_wgs84 &lt;- st_transform(buffer_5km, 4326)\nbuffer_10km_wgs84 &lt;- st_transform(buffer_10km, 4326)\n\n# Create the map\nleaflet() %&gt;%\n  addProviderTiles(providers$CartoDB.Positron) %&gt;%\n  # Add the buffers\n  addPolygons(\n    data = buffer_10km_wgs84,\n    fillColor = \"yellow\",\n    fillOpacity = 0.2,\n    color = \"yellow\",\n    weight = 1\n  ) %&gt;%\n  addPolygons(\n    data = buffer_5km_wgs84,\n    fillColor = \"blue\",\n    fillOpacity = 0.2,\n    color = \"blue\",\n    weight = 1\n  ) %&gt;%\n  # Add the highway\n  addPolylines(\n    data = highway_wgs84,\n    color = \"black\",\n    weight = 2\n  ) %&gt;%\n  # Add access points\n  addCircleMarkers(\n    data = ap_wgs84,\n    radius = 3,\n    color = \"red\",\n    fillOpacity = 0.7\n  ) %&gt;%\n  # Set the view to Panama\n  setView(lng = -80.782127, lat = 8.537981, zoom = 7)\n\n\n\n\n\n\n\n\nCode\n# Calculate distances from each access point to the nearest part of the highway\ndistances &lt;- st_distance(ap_projected, highway_projected)\nmin_distances &lt;- apply(distances, 1, min)  # Get minimum distance for each point\n\n# Convert to kilometers for easier interpretation\nmin_distances_km &lt;- min_distances/1000\n\n# Basic statistics\ndistance_stats &lt;- summary(min_distances_km)\nprint(\"Summary statistics of distances (in km):\")\n\n\n[1] \"Summary statistics of distances (in km):\"\n\n\nCode\nprint(distance_stats)\n\n\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n  0.00033   1.54627   8.06498  18.26326  23.90969 112.14684 \n\n\nCode\n# Create a histogram of distances\nhist(min_distances_km, \n     breaks = 30,\n     main = \"Distribution of Access Point Distances from Highway\",\n     xlab = \"Distance (km)\",\n     ylab = \"Number of Access Points\")\n\n\n\n\n\n\n\n\n\nCode\n# We can also map this, coloring points by their distance to the highway\n# Create a color palette based on distances\npal &lt;- colorNumeric(\n  palette = \"YlOrRd\",  # Yellow to Orange to Red\n  domain = min_distances_km\n)\n\n# Create map\nleaflet() %&gt;%\n  addProviderTiles(providers$CartoDB.DarkMatter) %&gt;%\n  # Add highway\n  addPolylines(\n    data = highway_wgs84,\n    color = \"red\",\n    weight = 2\n  ) %&gt;%\n  # Add points colored by distance\n  addCircleMarkers(\n    data = ap_wgs84,\n    radius = 3,\n    color = ~pal(min_distances_km),\n    popup = ~paste(\"Distance to highway:\", round(min_distances_km, 2), \"km\"),\n    fillOpacity = 0.7\n  ) %&gt;%\n  # Add legend\n  \n  addLegend(\n    position = \"bottomright\",\n    pal = pal,\n    values = min_distances_km,\n    title = \"Distance to Highway (km)\"\n  ) %&gt;%\n  setView(lng = -80.782127, lat = 8.537981, zoom = 7)\n\n\n\n\n\n\n\n\nCode\n# Calculate correlation between access points and schools considering spatial weights\nap_schools_correlation &lt;- cor.test(\n  district_data_complete$access_points,\n  district_data_complete$schools\n)\n\n# And with density\nap_density_correlation &lt;- cor.test(\n  district_data_complete$access_points,\n  district_data_complete$density\n)\n\nprint(\"\\nSpatial Correlations:\")\n\n\n[1] \"\\nSpatial Correlations:\"\n\n\nCode\nprint(\"Access Points vs Schools:\")\n\n\n[1] \"Access Points vs Schools:\"\n\n\nCode\nprint(ap_schools_correlation)\n\n\n\n    Pearson's product-moment correlation\n\ndata:  district_data_complete$access_points and district_data_complete$schools\nt = 9.7615, df = 73, p-value = 7.053e-15\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.6337455 0.8365652\nsample estimates:\n      cor \n0.7524744 \n\n\nCode\nprint(\"\\nAccess Points vs Density:\")\n\n\n[1] \"\\nAccess Points vs Density:\"\n\n\nCode\nprint(ap_density_correlation)\n\n\n\n    Pearson's product-moment correlation\n\ndata:  district_data_complete$access_points and district_data_complete$density\nt = 2.3802, df = 73, p-value = 0.01992\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.04408264 0.46688466\nsample estimates:\n      cor \n0.2683595 \n\n\n\n\nCode\nleaflet() %&gt;%\n  addProviderTiles(providers$CartoDB.Positron) %&gt;%\n  # Districts with detailed popups\n  addPolygons(\n    data = district_data_complete,\n    weight = 1,\n    color = \"red\",\n    fillOpacity = 0.4,\n    popup = ~paste(\n      \"&lt;b&gt;District:&lt;/b&gt;\", NAME_2,\n      \"&lt;br&gt;&lt;b&gt;Province:&lt;/b&gt;\", NAME_1,\n      \"&lt;br&gt;&lt;b&gt;Population:&lt;/b&gt;\", population.x,\n      \"&lt;br&gt;&lt;b&gt;Density:&lt;/b&gt;\", round(density, 2),\n      \"&lt;br&gt;&lt;b&gt;Number of Schools:&lt;/b&gt;\", schools,\n      \"&lt;br&gt;&lt;b&gt;Number of Access Points:&lt;/b&gt;\", access_points,\n      \"&lt;br&gt;&lt;b&gt;AP per School:&lt;/b&gt;\", round(ap_per_school, 2),\n      \"&lt;br&gt;&lt;b&gt;AP per 1000 People:&lt;/b&gt;\", round(ap_per_1000_people, 2)\n    ),\n    group = \"Districts\"\n  ) %&gt;%\n  # Schools with detailed popups\n  addCircleMarkers(\n    data = schools_data,\n    radius = 4,\n    color = \"blue\",\n    popup = ~paste(\n      \"&lt;b&gt;School:&lt;/b&gt;\", name,\n      \"&lt;br&gt;&lt;b&gt;Province:&lt;/b&gt;\", province,\n      \"&lt;br&gt;&lt;b&gt;District:&lt;/b&gt;\", district,\n      \"&lt;br&gt;&lt;b&gt;County:&lt;/b&gt;\", county,\n      \"&lt;br&gt;&lt;b&gt;Type:&lt;/b&gt;\", type\n    ),\n    group = \"Schools\"\n  ) %&gt;%\n  # Access points with detailed popups\n  addCircleMarkers(\n    data = ap_data,\n    radius = 4,\n    color = \"green\",\n    popup = ~paste(\n      \"&lt;b&gt;Location:&lt;/b&gt;\", name,\n      \"&lt;br&gt;&lt;b&gt;Province:&lt;/b&gt;\", province,\n      \"&lt;br&gt;&lt;b&gt;District:&lt;/b&gt;\", district,\n      \"&lt;br&gt;&lt;b&gt;County:&lt;/b&gt;\", county,\n      \"&lt;br&gt;&lt;b&gt;Type:&lt;/b&gt;\", type,\n      \"&lt;br&gt;&lt;b&gt;Date:&lt;/b&gt;\", date\n    ),\n    group = \"Access Points\"\n  ) %&gt;%\n  # Add layer controls\n  addLayersControl(\n    overlayGroups = c(\"Districts\", \"Schools\", \"Access Points\"),\n    options = layersControlOptions(collapsed = FALSE)\n  )"
  },
  {
    "objectID": "index.html#do-public-schools-get-better-access-to-public-internet",
    "href": "index.html#do-public-schools-get-better-access-to-public-internet",
    "title": "Public Internet Correlation between Population Density or Schools",
    "section": "",
    "text": "This research analyses whether public schools in Panama, get access to public internet via access points\n\nGoogle Satellite\nMigration Panama\n\n\n\n\nMostrar histograma por provincia, cantidad de access points y escuelas\nMostrar histoograma por distrito, cantidad de ap y escuelas\nver si puedo encontrar, que distritos tocan el panamerican highway\ncorrer una regresion?\nmeter data temporal de uso de datos por access points\nagregar datos de cantidad de estudiantes por distrito https://www.inec.gob.pa/archivos/P030194820231213142523Cuadro%2021.pdf\nagregar un indice normalizado (ya que el numero es muy chiquito) de la cantidad de casas sin internet https://www.inec.gob.pa/archivos/P0705547520240202111515Cuadro%201.pdf\n\nFuture: - indicadores socioeconomicos a nivel de distrito https://www.inec.gob.pa/archivos/P0579518620240202083001Cuadro%204.pdf -\nIt’s plain text so works well with version control - It can be rendered into HTML, PDF, and more - Learn more at: https://quarto.org/docs/authoring/\nConstruction Polygons (Satellite Data): Use Moran’s I to evaluate the spatial clustering of construction activities over time. Is construction clustering around migrant routes or reception centers? You could calculate Moran’s I for different years to observe changes in spatial autocorrelation patterns.\n\n\nCode\n#library\nlibrary(sf)\n\n\nLinking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.3.1; sf_use_s2() is TRUE\n\n\nCode\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(tmap)\n\n\nWarning: package 'tmap' was built under R version 4.4.2\n\n\nBreaking News: tmap 3.x is retiring. Please test v4, e.g. with\nremotes::install_github('r-tmap/tmap')\n\n\nCode\nlibrary(readr)\nlibrary(DT)\n\n\nWarning: package 'DT' was built under R version 4.4.2\n\n\nCode\nlibrary(skimr)\n\n\nWarning: package 'skimr' was built under R version 4.4.2\n\n\nCode\nlibrary(plotly)\n\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\n\nCode\nlibrary(leaflet)\n\n\n\n\nCode\n#functions\nconvert_dms_to_decimal &lt;- function(dms_str) {\n  # Extract components\n  parts &lt;- str_match(dms_str, \"(\\\\d+)° (\\\\d+)' (\\\\d+\\\\.?\\\\d*)\\\"\\\" ([N|S|E|W])\")\n  \n  # Convert components to numeric\n  degrees &lt;- as.numeric(parts[, 2])\n  minutes &lt;- as.numeric(parts[, 3])\n  seconds &lt;- as.numeric(parts[, 4])\n  \n  # Calculate decimal degrees\n  decimal &lt;- degrees + minutes/60 + seconds/3600\n  \n  # Apply sign based on direction\n  direction &lt;- parts[, 5]\n  decimal &lt;- ifelse(direction %in% c(\"S\", \"W\"), -decimal, decimal)\n  \n  return(decimal)\n}\n\n\n\n\nCode\n#schools data\nschools_csv &lt;- read.csv(\"data-spatial/schools-data.csv\")\n\n#district data\ndistrict_path &lt;- \"data-spatial/panama-districts/gadm41_PAN_2.json\"\n# Read GeoJSON data\ndistrict_data &lt;- st_read(district_path, quiet = TRUE)\n# Fix any invalid geometries\ndistrict_data &lt;- st_make_valid(district_data)\n\n#Panama highway\n# Read GeoJSON data\nhighway_data &lt;- st_read(\"data-spatial/panam-highway.geojson\", quiet = TRUE)\n\n#access points data\nap_csv &lt;- read.csv(\"data-spatial/access-points.csv\", fileEncoding=\"latin1\")\nap_data &lt;- st_as_sf(ap_csv, \n                      coords = c(\"long\", \"lat\"),\n                      crs = 4326)\n\n\n\n\nCode\n#Cleaning data\n\n# Convert your coordinates\nschools_csv$decimal_lat &lt;- convert_dms_to_decimal(schools_csv$lat)\nschools_csv$decimal_long &lt;- convert_dms_to_decimal(schools_csv$long)\n\n#removing long, lat columns and creating schools_df\nschools_df &lt;- schools_csv %&gt;% select(-lat) %&gt;% select(-long)\n\n# Create SF object with converted coordinates from schools_df\nschools_data &lt;- st_as_sf(schools_df, \n                      coords = c(\"decimal_long\", \"decimal_lat\"),\n                      crs = 4326)\n\n\n\n\nCode\nrm(schools_csv, district_path, ap_csv, schools_df)\n\n\n\n\nCode\n#province summary\nprovince_summary &lt;- schools_data %&gt;%\n  st_drop_geometry() %&gt;%\n  group_by(province) %&gt;%\n  summarise(schools = n()) %&gt;%\n  full_join(\n    ap_data %&gt;%\n      st_drop_geometry() %&gt;%\n      group_by(province) %&gt;%\n      summarise(access_points = n()),\n    by = \"province\"\n  ) %&gt;%\n  full_join(\n    district_data %&gt;%\n      st_drop_geometry() %&gt;%\n      group_by(NAME_1) %&gt;%\n      summarise(population = sum(population)),\n    by = c(\"province\" = \"NAME_1\")\n  ) %&gt;%\n  mutate(\n    ap_per_school = round(access_points/schools, 2),\n    ap_per_1000_people = round((access_points/population) * 1000, 2)\n  )\n\n\n#district summary\ndistrict_summary &lt;- schools_data %&gt;%\n  st_drop_geometry() %&gt;%  # Remove spatial component\n  group_by(district) %&gt;%\n  summarise(schools = n()) %&gt;%\n  full_join(\n    ap_data %&gt;%\n      st_drop_geometry() %&gt;%  # Remove spatial component\n      group_by(district) %&gt;%\n      summarise(access_points = n()),\n    by = \"district\"\n  ) %&gt;%\n  full_join(\n    district_data %&gt;%\n      st_drop_geometry() %&gt;%\n      select(NAME_2, population),\n    by = c(\"district\" = \"NAME_2\")\n  ) %&gt;%\n  mutate(\n    access_points = coalesce(access_points, 0),  # Replace NA with 0\n    ap_per_school = round(access_points/schools, 2),\n    ap_per_1000_people = round((access_points/population) * 1000, 2)  \n  )\n\ndistrict_summary &lt;- district_summary %&gt;%\n  filter(!is.na(population), !is.na(access_points)) %&gt;%\n  arrange(district) \n\n\ndatatable(province_summary,\n          colnames = c(\"Province\", \"Number of Schools\", \"Number of Access Points\", \"Population\", \"AP per School\", \"AP per 1000 people\"),\n          options = list(pageLength = 20))\n\n\n\n\n\n\nCode\ndatatable(district_summary,\n          colnames = c(\"District\", \"Number of Schools\", \"Number of Access Points\", \"Population\", \"AP per School\", \"AP per 1000 people\"),\n          options = list(pageLength = 20))\n\n\n\n\n\n\nCode\nprovince_summary\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprovince\nschools\naccess_points\npopulation\nap_per_school\nap_per_1000_people\n\n\n\n\nBocas del Toro\n166\n54\n113871.0\n0.33\n0.47\n\n\nChiriqui\n460\n227\n447546.0\n0.49\n0.51\n\n\nCocle\n343\n160\n268264.0\n0.47\n0.60\n\n\nColon\n201\n70\n278395.0\n0.35\n0.25\n\n\nComarca Embera\n39\n3\n12358.0\n0.08\n0.24\n\n\nComarca Kuna Yala\n48\n7\n32016.0\n0.15\n0.22\n\n\nComarca Ngobe Bugle\n307\n23\n129165.5\n0.07\n0.18\n\n\nDarien\n154\n36\n34506.0\n0.23\n1.04\n\n\nHerrera\n200\n65\n117786.0\n0.32\n0.55\n\n\nLos Santos\n176\n70\n98466.0\n0.40\n0.71\n\n\nPanama\n640\n377\n1439575.0\n0.59\n0.26\n\n\nVeraguas\n500\n110\n236944.2\n0.22\n0.46\n\n\nPanama Oeste\nNA\n103\n653665.0\nNA\n0.16\n\n\n\n\n\n\nCode\ndistrict_summary\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndistrict\nschools\naccess_points\npopulation\nap_per_school\nap_per_1000_people\n\n\n\n\nAguadulce\n32\n30\n49005.0\n0.94\n0.61\n\n\nAlanje\n22\n7\n18877.0\n0.32\n0.37\n\n\nAnton\n46\n27\n59194.0\n0.59\n0.46\n\n\nArraijan\n42\n43\n299079.0\n1.02\n0.14\n\n\nAtalaya\n14\n3\n17507.0\n0.21\n0.17\n\n\nBalboa\n9\n0\n1989.0\n0.00\n0.00\n\n\nBaru\n83\n38\n56307.0\n0.46\n0.67\n\n\nBesiko\n34\n1\n31422.0\n0.03\n0.03\n\n\nBocas del Toro\n35\n6\n285.0\n0.17\n21.05\n\n\nBoqueron\n24\n8\n21001.0\n0.33\n0.38\n\n\nBoquete\n20\n7\n23562.0\n0.35\n0.30\n\n\nBugaba\n79\n45\n68870.0\n0.57\n0.65\n\n\nCalobre\n45\n2\n11666.0\n0.04\n0.17\n\n\nCapira\n78\n14\n45629.0\n0.18\n0.31\n\n\nCañazas\n63\n1\n16933.0\n0.02\n0.06\n\n\nCemaco\n28\n3\n9547.0\n0.11\n0.31\n\n\nChagres\n37\n3\n10968.0\n0.08\n0.27\n\n\nChame\n26\n12\n28535.0\n0.46\n0.42\n\n\nChanguinola\n109\n41\n101091.0\n0.38\n0.41\n\n\nChepigana\n114\n22\n12983.0\n0.19\n1.69\n\n\nChepo\n105\n32\n65588.0\n0.30\n0.49\n\n\nChiman\n17\n0\n3142.0\n0.00\n0.00\n\n\nChiriqui Grande\n22\n7\n12495.0\n0.32\n0.56\n\n\nChitre\n17\n33\n60957.0\n1.94\n0.54\n\n\nColon\n89\n57\n240722.0\n0.64\n0.24\n\n\nComarca Kuna Yala\n48\n7\n32016.0\n0.15\n0.22\n\n\nDavid\n77\n58\n156498.0\n0.75\n0.37\n\n\nDolega\n26\n17\n37678.0\n0.65\n0.45\n\n\nDonoso\n52\n3\n12274.0\n0.06\n0.24\n\n\nGualaca\n23\n5\n9831.0\n0.22\n0.51\n\n\nGuarare\n17\n11\n12107.0\n0.65\n0.91\n\n\nKankintu\n68\n2\n19751.0\n0.03\n0.10\n\n\nKusapin\n50\n3\n17047.0\n0.06\n0.18\n\n\nLa Chorrera\n73\n26\n258221.0\n0.36\n0.10\n\n\nLa Mesa\n29\n8\n12238.0\n0.28\n0.65\n\n\nLa Pintada\n66\n22\n29698.0\n0.33\n0.74\n\n\nLas Minas\n43\n2\n6642.0\n0.05\n0.30\n\n\nLas Palmas\n53\n4\n1015.2\n0.08\n3.94\n\n\nLas Tablas\n39\n20\n30440.0\n0.51\n0.66\n\n\nLos Pozos\n36\n4\n6928.0\n0.11\n0.58\n\n\nLos Santos\n28\n16\n30028.0\n0.57\n0.53\n\n\nMacaracas\n34\n4\n8965.0\n0.12\n0.45\n\n\nMirono\n32\n1\n21800.0\n0.03\n0.05\n\n\nMontijo\n43\n3\n6784.0\n0.07\n0.44\n\n\nMuna\n70\n8\n799.5\n0.11\n10.01\n\n\nNata\n30\n12\n19741.0\n0.40\n0.61\n\n\nNole Duima\n20\n4\n20709.0\n0.20\n0.19\n\n\nOcu\n50\n11\n16116.0\n0.22\n0.68\n\n\nOla\n22\n4\n6300.0\n0.18\n0.63\n\n\nPanama\n207\n278\n1086990.0\n1.34\n0.26\n\n\nParita\n13\n3\n9695.0\n0.23\n0.31\n\n\nPedasi\n9\n11\n4942.0\n1.22\n2.23\n\n\nPenonome\n147\n65\n104326.0\n0.44\n0.62\n\n\nPese\n31\n7\n8724.0\n0.23\n0.80\n\n\nPinogana\n40\n14\n21523.0\n0.35\n0.65\n\n\nPocri\n14\n5\n3025.0\n0.36\n1.65\n\n\nPortobelo\n13\n4\n10320.0\n0.31\n0.39\n\n\nRemedios\n5\n4\n4388.0\n0.80\n0.91\n\n\nRenacimiento\n38\n20\n22429.0\n0.53\n0.89\n\n\nRio de Jesus\n13\n3\n4822.0\n0.23\n0.62\n\n\nSambu\n11\n0\n2811.0\n0.00\n0.00\n\n\nSan Carlos\n25\n8\n22201.0\n0.32\n0.36\n\n\nSan Felix\n8\n6\n6881.0\n0.75\n0.87\n\n\nSan Francisco\n30\n4\n10107.0\n0.13\n0.40\n\n\nSan Lorenzo\n16\n7\n8031.0\n0.44\n0.87\n\n\nSan Miguelito\n56\n65\n280777.0\n1.16\n0.23\n\n\nSanta Fe\n39\n4\n18023.0\n0.10\n0.22\n\n\nSanta Isabel\n10\n3\n4111.0\n0.30\n0.73\n\n\nSanta Maria\n10\n5\n8724.0\n0.50\n0.57\n\n\nSantiago\n91\n51\n109605.0\n0.56\n0.47\n\n\nSona\n78\n23\n28244.0\n0.29\n0.81\n\n\nTaboga\n2\n2\n1089.0\n1.00\n1.84\n\n\nTole\n39\n5\n13193.0\n0.13\n0.38\n\n\nTonosi\n35\n3\n8959.0\n0.09\n0.33\n\n\nÑurum\n32\n4\n17637.0\n0.12\n0.23\n\n\n\n\n\n\n\n\nCode\ndistrict_summary &lt;- district_summary %&gt;%\n  filter(!is.na(population), !is.na(access_points)) %&gt;%\n  arrange(district) \n\n\nplot_ly(district_summary, \n        x = ~population, \n        y = ~access_points,\n        type = 'scatter',\n        mode = 'markers',\n        marker = list(\n          size = 10,\n          color = 'rgb(49,130,189)',\n          opacity = 0.7,\n          line = list(color = 'rgb(27,71,105)', width = 1)\n        ),\n        text = ~district,\n        hovertemplate = paste(\n          '&lt;b&gt;District:&lt;/b&gt; %{text}&lt;br&gt;',\n          '&lt;b&gt;Population:&lt;/b&gt; %{x:,}&lt;br&gt;',\n          '&lt;b&gt;Access Points:&lt;/b&gt; %{y}&lt;br&gt;',\n          '&lt;b&gt;Schools:&lt;/b&gt; ', district_summary$schools, '&lt;br&gt;',\n          '&lt;b&gt;AP per School:&lt;/b&gt; ', district_summary$ap_per_school,\n          '&lt;extra&gt;&lt;/extra&gt;'\n        )\n) %&gt;%\n  add_lines(x = ~population,\n            y = ~fitted(lm(access_points ~ population, data = district_summary)),\n            line = list(color = 'rgb(219,64,82)',\n                       width = 2,\n                       dash = 'dash'),\n            showlegend = TRUE,\n            name = 'Trend line') %&gt;%\n  layout(\n    title = list(\n      text = \"Access Points vs Population by District\",\n      font = list(size = 24)\n    ),\n    xaxis = list(\n      title = \"Population\",\n      gridcolor = 'rgb(255,255,255)',\n      gridwidth = 2,\n      showgrid = TRUE,\n      zeroline = FALSE\n    ),\n    yaxis = list(\n      title = \"Number of Access Points\",\n      gridcolor = 'rgb(255,255,255)',\n      gridwidth = 2,\n      showgrid = TRUE,\n      zeroline = FALSE\n    ),\n    paper_bgcolor = 'rgb(251,251,251)',\n    plot_bgcolor = 'rgb(251,251,251)',\n    showlegend = TRUE\n  )\n\n\nA marker object has been specified, but markers is not in the mode\nAdding markers to the mode...\n\n\n\n\n\n\n\n\nCode\nlibrary(plotly)\n\n# Create side-by-side plots\nsubplot(\n  # Left plot: Access Points vs Population\n  plot_ly(district_summary, \n          x = ~population, \n          y = ~access_points,\n          type = 'scatter',\n          mode = 'markers',\n          marker = list(\n            size = 10,\n            color = 'rgb(49,130,189)',\n            opacity = 0.7,\n            line = list(color = 'rgb(27,71,105)', width = 1)\n          ),\n          text = ~district,\n          hovertemplate = paste(\n            '&lt;b&gt;District:&lt;/b&gt; %{text}&lt;br&gt;',\n            '&lt;b&gt;Population:&lt;/b&gt; %{x:,}&lt;br&gt;',\n            '&lt;b&gt;Access Points:&lt;/b&gt; %{y}&lt;br&gt;',\n            '&lt;extra&gt;&lt;/extra&gt;'\n          )\n  ) %&gt;%\n    add_lines(x = ~population,\n              y = ~fitted(lm(access_points ~ population, data = district_summary)),\n              line = list(color = 'rgb(219,64,82)',\n                         width = 2,\n                         dash = 'dash'),\n              showlegend = TRUE,\n              name = 'Access Points Trend') %&gt;%\n    layout(\n      title = \"Access Points vs Population\",\n      xaxis = list(\n        title = \"Population\",\n        gridcolor = 'rgb(255,255,255)',\n        gridwidth = 2,\n        showgrid = TRUE,\n        zeroline = FALSE\n      ),\n      yaxis = list(\n        title = \"Number of Access Points\",\n        gridcolor = 'rgb(255,255,255)',\n        gridwidth = 2,\n        showgrid = TRUE,\n        zeroline = FALSE\n      ),\n      paper_bgcolor = 'rgb(251,251,251)',\n      plot_bgcolor = 'rgb(251,251,251)'\n    ),\n  \n  # Right plot: Access Points per School\n  plot_ly(district_summary, \n          x = ~population, \n          y = ~ap_per_school,\n          type = 'scatter',\n          mode = 'markers',\n          marker = list(\n            size = 10,\n            color = 'rgb(50,205,50)',\n            opacity = 0.7,\n            line = list(color = 'rgb(0,100,0)', width = 1)\n          ),\n          text = ~district,\n          hovertemplate = paste(\n            '&lt;b&gt;District:&lt;/b&gt; %{text}&lt;br&gt;',\n            '&lt;b&gt;Population:&lt;/b&gt; %{x:,}&lt;br&gt;',\n            '&lt;b&gt;Access Points per School:&lt;/b&gt; %{y:.2f}&lt;br&gt;',\n            '&lt;b&gt;Total Schools:&lt;/b&gt; ', district_summary$schools, '&lt;br&gt;',\n            '&lt;extra&gt;&lt;/extra&gt;'\n          )\n  ) %&gt;%\n    add_lines(x = ~population,\n              y = ~fitted(lm(ap_per_school ~ population, data = district_summary)),\n              line = list(color = 'rgb(255,69,0)',\n                         width = 2,\n                         dash = 'dash'),\n              showlegend = TRUE,\n              name = 'AP per School Trend') %&gt;%\n    layout(\n      title = \"Access Points per School vs Population\",\n      xaxis = list(\n        title = \"Population\",\n        gridcolor = 'rgb(255,255,255)',\n        gridwidth = 2,\n        showgrid = TRUE,\n        zeroline = FALSE\n      ),\n      yaxis = list(\n        title = \"Access Points per School\",\n        gridcolor = 'rgb(255,255,255)',\n        gridwidth = 2,\n        showgrid = TRUE,\n        zeroline = FALSE\n      ),\n      paper_bgcolor = 'rgb(251,251,251)',\n      plot_bgcolor = 'rgb(251,251,251)'\n    ),\n  \n  # Subplot layout\n  nrows = 1,\n  shareX = TRUE,\n  titleX = TRUE\n)\n\n\nA marker object has been specified, but markers is not in the mode\nAdding markers to the mode...\nA marker object has been specified, but markers is not in the mode\nAdding markers to the mode...\n\n\n\n\n\n\n\n\nCode\n# Run linear regression\nmodel &lt;- lm(access_points ~ population, data = district_summary)\n\n# View summary of regression results\nsummary(model)\n\n\n\nCall:\nlm(formula = access_points ~ population, data = district_summary)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-41.413  -4.688  -2.250   3.524  34.859 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 4.874e+00  1.302e+00   3.743  0.00036 ***\npopulation  2.422e-04  8.992e-06  26.934  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 10.54 on 73 degrees of freedom\nMultiple R-squared:  0.9086,    Adjusted R-squared:  0.9073 \nF-statistic: 725.5 on 1 and 73 DF,  p-value: &lt; 2.2e-16\n\n\nCode\n# For a more detailed analysis, we can also include additional variables\nmodel_extended &lt;- lm(access_points ~ population + schools, data = district_summary)\nsummary(model_extended)\n\n\n\nCall:\nlm(formula = access_points ~ population + schools, data = district_summary)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-40.368  -3.912   0.572   4.103  19.345 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -2.568e+00  1.772e+00  -1.449    0.152    \npopulation   2.058e-04  1.021e-05  20.171  &lt; 2e-16 ***\nschools      2.162e-01  4.019e-02   5.379 8.89e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.962 on 72 degrees of freedom\nMultiple R-squared:  0.9348,    Adjusted R-squared:  0.933 \nF-statistic:   516 on 2 and 72 DF,  p-value: &lt; 2.2e-16\n\n\n\n\nCode\n# Create the map\nap_map &lt;- leaflet(ap_data) %&gt;%\n  # Add base map tiles\n  addProviderTiles(providers$CartoDB.Positron) %&gt;%\n  # Add access points\n  addCircleMarkers(\n    radius = 5,\n    color = \"blue\",\n    fillColor = \"blue\",\n    fillOpacity = 0.6,\n    stroke = TRUE,\n    weight = 1,\n    popup = ~paste(\n      \"&lt;strong&gt;Location:&lt;/strong&gt;\", name, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Province:&lt;/strong&gt;\", province, \"&lt;br&gt;\",\n      \"&lt;strong&gt;District:&lt;/strong&gt;\", district, \"&lt;br&gt;\",\n      \"&lt;strong&gt;County:&lt;/strong&gt;\", county, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Type:&lt;/strong&gt;\", type, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Date:&lt;/strong&gt;\", date\n    ),\n    # Enable clustering to handle many points\n    clusterOptions = markerClusterOptions()\n  ) %&gt;%\n  # Set the initial view to Panama\n  setView(lng = -80.782127, lat = 8.537981, zoom = 7)\n\nap_map\n\n\n\n\n\n\n\n\nCode\ndistrict_data_merged &lt;- district_data %&gt;%\n  left_join(district_summary, by = c(\"NAME_2\" = \"district\"))\n\n\nbreaks &lt;- c(1, 10, 50, 100, 200, max(district_data_merged$access_points))\npal &lt;- colorBin(\n  palette = \"RdYlGn\",\n  domain = district_data_merged$access_points,\n  bins = breaks,\n  reverse = FALSE\n)\n\n# Create the map\nleaflet(district_data_merged) %&gt;%\n  addProviderTiles(providers$CartoDB.DarkMatter) %&gt;%\n  addPolygons(\n    fillColor = ~pal(access_points),\n    fillOpacity = 0.7,\n    weight = 1,\n    color = \"#666\",\n    highlightOptions = highlightOptions(\n      weight = 2,\n      color = \"#666\",\n      fillOpacity = 0.9,\n      bringToFront = TRUE\n    ),\n    popup = ~paste(\n      \"&lt;strong&gt;District:&lt;/strong&gt;\", NAME_2, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Province:&lt;/strong&gt;\", NAME_1, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Access Points:&lt;/strong&gt;\", access_points, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Schools:&lt;/strong&gt;\", schools\n    )\n  ) %&gt;%\n  addLegend(\n    position = \"bottomright\",\n    pal = pal,\n    values = ~access_points,\n    title = \"Number of Access Points\",\n    opacity = 0.7,\n    labFormat = labelFormat(digits = 0)  # Show integers only\n  ) %&gt;%\n  setView(lng = -80.782127, lat = 8.537981, zoom = 7)\n\n\nWarning in pal(access_points): Some values were outside the color scale and\nwill be treated as NA\n\n\n\n\n\n\n\n\nCode\nlibrary(osmdata)\n\n\nWarning: package 'osmdata' was built under R version 4.4.2\n\n\nData (c) OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright\n\n\nCode\nlibrary(sf)\n\npanama_bb &lt;- getbb(\"Panama\")\nhighway &lt;- opq(panama_bb) %&gt;%\n  add_osm_feature(key = \"name\", value = \"Carretera Panamericana\") %&gt;%\n  osmdata_sf()\n\nleaflet() %&gt;%\n  addProviderTiles(providers$CartoDB.DarkMatter) %&gt;%\n  addPolylines(\n    data = highway$osm_lines,  # Using the lines from your downloaded data\n    color = \"red\",\n    weight = 2,\n    opacity = 0.8,\n    popup = ~name  # This will show the road name when clicked\n  ) %&gt;%\n  setView(lng = -80.782127, lat = 8.537981, zoom = 7)\n\n\n\n\n\n\n\n\nCode\npal &lt;- colorFactor(\n  palette = \"Set3\",\n  domain = unique(schools_data$type)\n)\n\nleaflet() %&gt;%\n  # Add a base map (you can change the provider as we discussed)\n  addProviderTiles(providers$CartoDB.DarkMatter) %&gt;%\n  # Add school points with clustering\n  addCircleMarkers(\n    data = schools_data,\n    radius = 6,\n    color = ~pal(type),\n    fillOpacity = 1,\n    stroke = TRUE,\n    weight = 1,\n    popup = ~paste(\n      \"&lt;strong&gt;School:&lt;/strong&gt;\", name, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Type:&lt;/strong&gt;\", type, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Province:&lt;/strong&gt;\", province, \"&lt;br&gt;\",\n      \"&lt;strong&gt;District:&lt;/strong&gt;\", district, \"&lt;br&gt;\",\n      \"&lt;strong&gt;County:&lt;/strong&gt;\", county\n    ),\n    clusterOptions = markerClusterOptions()\n  ) %&gt;%\n  addLegend(\n    position = \"bottomright\",\n    pal = pal,\n    values = schools_data$type,\n    title = \"School Type\"\n  ) %&gt;%\n  # Set the initial view to Panama\n  setView(lng = -80.782127, lat = 8.537981, zoom = 7)\n\n\n\n\n\n\n\n\nCode\ndistricts_with_highway &lt;- st_intersection(district_data, highway$osm_lines)\n\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\n\nCode\nhighway_districts &lt;- unique(districts_with_highway$NAME_2)\n\n\nleaflet() %&gt;%\n  addProviderTiles(providers$CartoDB.DarkMatter) %&gt;%\n  # Add all districts in light gray\n  addPolygons(\n    data = district_data,\n    fillColor = \"lightgray\",\n    fillOpacity = 0.3,\n    weight = 1,\n    color = \"gray\"\n  ) %&gt;%\n  # Highlight districts with highway in blue\n  addPolygons(\n    data = district_data[district_data$NAME_2 %in% highway_districts,],\n    fillColor = \"yellow\",\n    fillOpacity = 0.3,\n    weight = 1,\n    color = \"blue\",\n    popup = ~NAME_2\n  ) %&gt;%\n  # Add the highway in red\n  addPolylines(\n    data = highway$osm_lines,\n    color = \"red\",\n    weight = 2\n  ) %&gt;%\n  setView(lng = -80.782127, lat = 8.537981, zoom = 7)\n\n\n\n\n\n\n\n\nCode\nlibrary(spdep)\n\n\nWarning: package 'spdep' was built under R version 4.4.2\n\n\nLoading required package: spData\n\n\nTo access larger datasets in this package, install the spDataLarge\npackage with: `install.packages('spDataLarge',\nrepos='https://nowosad.github.io/drat/', type='source')`\n\n\nCode\ndistrict_data_complete &lt;- merge(district_data, \n                              district_summary, \n                              by.x = \"NAME_2\", \n                              by.y = \"district\")\n# 1. Create a neighbors list based on district boundaries\n# Queens case (districts sharing any boundary point)\nnb &lt;- poly2nb(district_data_complete, queen = TRUE)\n\n\nWarning in poly2nb(district_data_complete, queen = TRUE): some observations have no neighbours;\nif this seems unexpected, try increasing the snap argument.\n\n\nWarning in poly2nb(district_data_complete, queen = TRUE): neighbour object has 3 sub-graphs;\nif this sub-graph count seems unexpected, try increasing the snap argument.\n\n\nCode\n# 2. Create spatial weights\nw &lt;- nb2listw(nb, style = \"W\", zero.policy = TRUE)\n\n# Now calculate Moran's I with zero.policy=TRUE\nmoran_test &lt;- moran.test(district_data_complete$access_points, w, zero.policy = TRUE)\nprint(moran_test)\n\n\n\n    Moran I test under randomisation\n\ndata:  district_data_complete$access_points  \nweights: w  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 4.7929, p-value = 8.218e-07\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.229408902      -0.013888889       0.002576752 \n\n\nCode\n# For visualization\nmoran.plot(district_data_complete$access_points, w, \n          labels = district_data_complete$NAME_2,\n          xlab = \"Access Points\",\n          ylab = \"Spatially Lagged Access Points\",\n          zero.policy = TRUE)\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Calculate local Moran's I\nlocal_moran &lt;- localmoran(district_data_complete$access_points, w, zero.policy = TRUE)\n\n# Add results to your spatial dataframe\ndistrict_data_complete$local_moran &lt;- local_moran[, 1]\ndistrict_data_complete$local_moran_p &lt;- local_moran[, 5]\n\n# Map it\nleaflet(district_data_complete) %&gt;%\n  addProviderTiles(providers$CartoDB.Positron) %&gt;%\n  addPolygons(\n    fillColor = ~colorNumeric(\"RdYlBu\", local_moran)(local_moran),\n    fillOpacity = 0.7,\n    weight = 1,\n    color = \"white\",\n    popup = ~paste(\n      \"&lt;strong&gt;District:&lt;/strong&gt;\", NAME_2,\n      \"&lt;br&gt;&lt;strong&gt;Local Moran's I:&lt;/strong&gt;\", round(local_moran, 3),\n      \"&lt;br&gt;&lt;strong&gt;Access Points:&lt;/strong&gt;\", access_points\n    )\n  ) %&gt;%\n  addLegend(\n    position = \"bottomright\",\n    pal = colorNumeric(\"RdYlBu\", local_moran[,1]),\n    values = local_moran[,1],\n    title = \"Local Moran's I\"\n  )\n\n\n\n\n\n\n\n\nCode\nlibrary(spdep)\n\n# 1. Access Points and Schools relationship\n# Standardize the variables\nz_ap &lt;- scale(district_data_complete$access_points)\nz_schools &lt;- scale(district_data_complete$schools)\n\n# Calculate Moran's I for Access Points vs Schools\nmoran_ap_schools &lt;- moran.test(district_data_complete$access_points, \n                              nb2listw(nb, style=\"W\", zero.policy=TRUE), \n                              zero.policy=TRUE)\n\nprint(\"Moran's I for Access Points vs Schools:\")\n\n\n[1] \"Moran's I for Access Points vs Schools:\"\n\n\nCode\nprint(moran_ap_schools)\n\n\n\n    Moran I test under randomisation\n\ndata:  district_data_complete$access_points  \nweights: nb2listw(nb, style = \"W\", zero.policy = TRUE)  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 4.7929, p-value = 8.218e-07\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.229408902      -0.013888889       0.002576752 \n\n\nCode\n# 2. Access Points and Density relationship\n# Standardize density\nz_density &lt;- scale(district_data_complete$density)\n\n# Calculate Moran's I for Access Points vs Density\nmoran_ap_density &lt;- moran.test(district_data_complete$density, \n                              nb2listw(nb, style=\"W\", zero.policy=TRUE), \n                              zero.policy=TRUE)\n\nprint(\"Moran's I for Access Points vs Density:\")\n\n\n[1] \"Moran's I for Access Points vs Density:\"\n\n\nCode\nprint(moran_ap_density)\n\n\n\n    Moran I test under randomisation\n\ndata:  district_data_complete$density  \nweights: nb2listw(nb, style = \"W\", zero.policy = TRUE)  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 5.813, p-value = 3.068e-09\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.1008972152     -0.0138888889      0.0003899232 \n\n\nCode\n# Create visualization plots\npar(mfrow=c(1,2))  # Set up a 1x2 plotting area\n\n# Plot for Access Points vs Schools\nmoran.plot(district_data_complete$access_points, \n          nb2listw(nb, style=\"W\", zero.policy=TRUE),\n          labels=district_data_complete$NAME_2,\n          xlab=\"Access Points\",\n          ylab=\"Spatially Lagged Access Points\",\n          main=\"Access Points vs Schools\",\n          zero.policy=TRUE)\n\n# Plot for Access Points vs Density\nmoran.plot(district_data_complete$density, \n          nb2listw(nb, style=\"W\", zero.policy=TRUE),\n          labels=district_data_complete$NAME_2,\n          xlab=\"Population Density\",\n          ylab=\"Spatially Lagged Density\",\n          main=\"Access Points vs Density\",\n          zero.policy=TRUE)\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Calculate ratio of access points to density\ndistrict_data_complete$ap_per_density &lt;- district_data_complete$access_points / district_data_complete$density\n\n# Calculate Moran's I\nmoran_density &lt;- moran.test(district_data_complete$ap_per_density, w, zero.policy = TRUE)\nprint(\"Moran's I for Access Points relative to Population Density:\")\n\n\n[1] \"Moran's I for Access Points relative to Population Density:\"\n\n\nCode\nprint(moran_density)\n\n\n\n    Moran I test under randomisation\n\ndata:  district_data_complete$ap_per_density  \nweights: w  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 4.3008, p-value = 8.51e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.208806834      -0.013888889       0.002681206 \n\n\nCode\n# Calculate ratio of access points to schools\ndistrict_data_complete$ap_per_school &lt;- district_data_complete$access_points / district_data_complete$schools\n\n# Calculate Moran's I\nmoran_schools &lt;- moran.test(district_data_complete$ap_per_school, w, zero.policy = TRUE)\nprint(\"Moran's I for Access Points relative to Schools:\")\n\n\n[1] \"Moran's I for Access Points relative to Schools:\"\n\n\nCode\nprint(moran_schools)\n\n\n\n    Moran I test under randomisation\n\ndata:  district_data_complete$ap_per_school  \nweights: w  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 3.1227, p-value = 0.0008959\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.229109922      -0.013888889       0.006055367 \n\n\n\n\nCode\n# Set up to display two Moran plots side by side\npar(mfrow=c(1,2))\n\n# Plot for Access Points per Density\nmoran.plot(district_data_complete$ap_per_density, \n         w,\n         labels=district_data_complete$NAME_2,\n         xlab=\"Access Points per Density\",\n         ylab=\"Spatially Lagged AP per Density\",\n         main=\"Access Points per Density\",\n         zero.policy=TRUE)\n\n# Plot for Access Points per School\nmoran.plot(district_data_complete$ap_per_school, \n         w,\n         labels=district_data_complete$NAME_2,\n         xlab=\"Access Points per School\",\n         ylab=\"Spatially Lagged AP per School\",\n         main=\"Access Points per School\",\n         zero.policy=TRUE)\n\n\n\n\n\n\n\n\n\nCode\n# Reset plotting parameters\npar(mfrow=c(1,1))\n\n# Let's also create choropleth maps to visualize these ratios\n# Map for AP per Density\nleaflet() %&gt;%\n addProviderTiles(providers$CartoDB.Positron) %&gt;%\n # First map: AP per Density\n addPolygons(\n   data = district_data_complete,\n   fillColor = ~colorNumeric(\"viridis\", ap_per_density)(ap_per_density),\n   fillOpacity = 0.7,\n   weight = 1,\n   color = \"white\",\n   popup = ~paste(\n     \"&lt;strong&gt;District:&lt;/strong&gt;\", NAME_2,\n     \"&lt;br&gt;&lt;strong&gt;AP per Density:&lt;/strong&gt;\", round(ap_per_density, 4)\n   )\n ) \n\n\n\n\n\n\nCode\n# Map for AP per School\nleaflet() %&gt;%\n addProviderTiles(providers$CartoDB.Positron) %&gt;%\n # Second map: AP per School\n addPolygons(\n   data = district_data_complete,\n   fillColor = ~colorNumeric(\"viridis\", ap_per_school)(ap_per_school),\n   fillOpacity = 0.7,\n   weight = 1,\n   color = \"white\",\n   popup = ~paste(\n     \"&lt;strong&gt;District:&lt;/strong&gt;\", NAME_2,\n     \"&lt;br&gt;&lt;strong&gt;AP per School:&lt;/strong&gt;\", round(ap_per_school, 4)\n   )\n ) \n\n\n\n\n\n\n\n\nCode\nlibrary(spatstat)\n\n\nWarning: package 'spatstat' was built under R version 4.4.2\n\n\nLoading required package: spatstat.data\n\n\nWarning: package 'spatstat.data' was built under R version 4.4.2\n\n\nLoading required package: spatstat.univar\n\n\nWarning: package 'spatstat.univar' was built under R version 4.4.2\n\n\nspatstat.univar 3.1-1\n\n\nLoading required package: spatstat.geom\n\n\nWarning: package 'spatstat.geom' was built under R version 4.4.2\n\n\nspatstat.geom 3.3-4\n\n\nLoading required package: spatstat.random\n\n\nWarning: package 'spatstat.random' was built under R version 4.4.2\n\n\nspatstat.random 3.3-2\n\n\nLoading required package: spatstat.explore\n\n\nWarning: package 'spatstat.explore' was built under R version 4.4.2\n\n\nLoading required package: nlme\n\n\n\nAttaching package: 'nlme'\n\n\nThe following object is masked from 'package:dplyr':\n\n    collapse\n\n\nspatstat.explore 3.3-3\n\n\nLoading required package: spatstat.model\n\n\nWarning: package 'spatstat.model' was built under R version 4.4.2\n\n\nLoading required package: rpart\n\n\nspatstat.model 3.3-3\n\n\nLoading required package: spatstat.linnet\n\n\nWarning: package 'spatstat.linnet' was built under R version 4.4.2\n\n\nspatstat.linnet 3.2-3\n\n\n\nspatstat 3.3-0 \nFor an introduction to spatstat, type 'beginner' \n\n\nCode\nlibrary(sf)\n\n# First, transform both datasets to UTM Zone 17N (EPSG:32617)\nschools_projected &lt;- st_transform(schools_data, 32617)\nap_projected &lt;- st_transform(ap_data, 32617)\ndistrict_projected &lt;- st_transform(district_data, 32617)\n\n# Create the observation window\nwindow &lt;- as.owin(st_union(district_projected))\n\n# Create point pattern objects for both schools and access points\nschools_coords &lt;- st_coordinates(schools_projected)\nap_coords &lt;- st_coordinates(ap_projected)\n\n# Create a marked point pattern with both types of points\npoints_combined &lt;- ppp(\n  x = c(schools_coords[,1], ap_coords[,1]),\n  y = c(schools_coords[,2], ap_coords[,2]),\n  marks = factor(c(rep(\"school\", nrow(schools_coords)),\n                  rep(\"ap\", nrow(ap_coords)))),\n  window = window\n)\n\n\nWarning: 49 points were rejected as lying outside the specified window\n\n\nWarning: data contain duplicated points\n\n\nCode\n# Calculate cross-type pair correlation function\ncross_pcf &lt;- pcfcross(points_combined, \"school\", \"ap\", correction = \"translate\")\n\n# Plot the cross-type pair correlation function\nplot(cross_pcf, main = \"Cross-type PCF: Schools vs Access Points\",\n     xlab = \"Distance (m)\", ylab = \"g(r)\")\nabline(h = 1, lty = 2)  # Add reference line at g(r) = 1\n\n\n\n\n\n\n\n\n\nCode\n# Calculate cross-type K function\ncross_K &lt;- Kcross(points_combined, \"school\", \"ap\", correction = \"border\")\n\n# Plot the cross-type K function\nplot(cross_K, main = \"Cross-type K function: Schools vs Access Points\",\n     xlab = \"Distance (m)\")\n\n\n\n\n\n\n\n\n\nCode\n# Calculate cross-type L function\ncross_L &lt;- Lcross(points_combined, \"school\", \"ap\", correction = \"border\")\n\n# Plot the cross-type L function\nplot(cross_L, main = \"Cross-type L function: Schools vs Access Points\",\n     xlab = \"Distance (m)\")\n\n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(sf)\n\n# First project to UTM for accurate buffer creation\nhighway_projected &lt;- st_transform(highway$osm_lines, 32617)  # UTM 17N\nap_projected &lt;- st_transform(ap_data, 32617)\n\n# Create buffers in UTM\nbuffer_5km &lt;- st_buffer(highway_projected, 5000)\nbuffer_10km &lt;- st_buffer(highway_projected, 10000)\n\n# Transform everything back to WGS84 for mapping\nhighway_wgs84 &lt;- st_transform(highway_projected, 4326)\nap_wgs84 &lt;- st_transform(ap_projected, 4326)\nbuffer_5km_wgs84 &lt;- st_transform(buffer_5km, 4326)\nbuffer_10km_wgs84 &lt;- st_transform(buffer_10km, 4326)\n\n# Create the map\nleaflet() %&gt;%\n  addProviderTiles(providers$CartoDB.Positron) %&gt;%\n  # Add the buffers\n  addPolygons(\n    data = buffer_10km_wgs84,\n    fillColor = \"yellow\",\n    fillOpacity = 0.2,\n    color = \"yellow\",\n    weight = 1\n  ) %&gt;%\n  addPolygons(\n    data = buffer_5km_wgs84,\n    fillColor = \"blue\",\n    fillOpacity = 0.2,\n    color = \"blue\",\n    weight = 1\n  ) %&gt;%\n  # Add the highway\n  addPolylines(\n    data = highway_wgs84,\n    color = \"black\",\n    weight = 2\n  ) %&gt;%\n  # Add access points\n  addCircleMarkers(\n    data = ap_wgs84,\n    radius = 3,\n    color = \"red\",\n    fillOpacity = 0.7\n  ) %&gt;%\n  # Set the view to Panama\n  setView(lng = -80.782127, lat = 8.537981, zoom = 7)\n\n\n\n\n\n\n\n\nCode\n# Calculate distances from each access point to the nearest part of the highway\ndistances &lt;- st_distance(ap_projected, highway_projected)\nmin_distances &lt;- apply(distances, 1, min)  # Get minimum distance for each point\n\n# Convert to kilometers for easier interpretation\nmin_distances_km &lt;- min_distances/1000\n\n# Basic statistics\ndistance_stats &lt;- summary(min_distances_km)\nprint(\"Summary statistics of distances (in km):\")\n\n\n[1] \"Summary statistics of distances (in km):\"\n\n\nCode\nprint(distance_stats)\n\n\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n  0.00033   1.54627   8.06498  18.26326  23.90969 112.14684 \n\n\nCode\n# Create a histogram of distances\nhist(min_distances_km, \n     breaks = 30,\n     main = \"Distribution of Access Point Distances from Highway\",\n     xlab = \"Distance (km)\",\n     ylab = \"Number of Access Points\")\n\n\n\n\n\n\n\n\n\nCode\n# We can also map this, coloring points by their distance to the highway\n# Create a color palette based on distances\npal &lt;- colorNumeric(\n  palette = \"YlOrRd\",  # Yellow to Orange to Red\n  domain = min_distances_km\n)\n\n# Create map\nleaflet() %&gt;%\n  addProviderTiles(providers$CartoDB.DarkMatter) %&gt;%\n  # Add highway\n  addPolylines(\n    data = highway_wgs84,\n    color = \"red\",\n    weight = 2\n  ) %&gt;%\n  # Add points colored by distance\n  addCircleMarkers(\n    data = ap_wgs84,\n    radius = 3,\n    color = ~pal(min_distances_km),\n    popup = ~paste(\"Distance to highway:\", round(min_distances_km, 2), \"km\"),\n    fillOpacity = 0.7\n  ) %&gt;%\n  # Add legend\n  \n  addLegend(\n    position = \"bottomright\",\n    pal = pal,\n    values = min_distances_km,\n    title = \"Distance to Highway (km)\"\n  ) %&gt;%\n  setView(lng = -80.782127, lat = 8.537981, zoom = 7)\n\n\n\n\n\n\n\n\nCode\n# Calculate correlation between access points and schools considering spatial weights\nap_schools_correlation &lt;- cor.test(\n  district_data_complete$access_points,\n  district_data_complete$schools\n)\n\n# And with density\nap_density_correlation &lt;- cor.test(\n  district_data_complete$access_points,\n  district_data_complete$density\n)\n\nprint(\"\\nSpatial Correlations:\")\n\n\n[1] \"\\nSpatial Correlations:\"\n\n\nCode\nprint(\"Access Points vs Schools:\")\n\n\n[1] \"Access Points vs Schools:\"\n\n\nCode\nprint(ap_schools_correlation)\n\n\n\n    Pearson's product-moment correlation\n\ndata:  district_data_complete$access_points and district_data_complete$schools\nt = 9.7615, df = 73, p-value = 7.053e-15\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.6337455 0.8365652\nsample estimates:\n      cor \n0.7524744 \n\n\nCode\nprint(\"\\nAccess Points vs Density:\")\n\n\n[1] \"\\nAccess Points vs Density:\"\n\n\nCode\nprint(ap_density_correlation)\n\n\n\n    Pearson's product-moment correlation\n\ndata:  district_data_complete$access_points and district_data_complete$density\nt = 2.3802, df = 73, p-value = 0.01992\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.04408264 0.46688466\nsample estimates:\n      cor \n0.2683595 \n\n\n\n\nCode\nleaflet() %&gt;%\n  addProviderTiles(providers$CartoDB.Positron) %&gt;%\n  # Districts with detailed popups\n  addPolygons(\n    data = district_data_complete,\n    weight = 1,\n    color = \"red\",\n    fillOpacity = 0.4,\n    popup = ~paste(\n      \"&lt;b&gt;District:&lt;/b&gt;\", NAME_2,\n      \"&lt;br&gt;&lt;b&gt;Province:&lt;/b&gt;\", NAME_1,\n      \"&lt;br&gt;&lt;b&gt;Population:&lt;/b&gt;\", population.x,\n      \"&lt;br&gt;&lt;b&gt;Density:&lt;/b&gt;\", round(density, 2),\n      \"&lt;br&gt;&lt;b&gt;Number of Schools:&lt;/b&gt;\", schools,\n      \"&lt;br&gt;&lt;b&gt;Number of Access Points:&lt;/b&gt;\", access_points,\n      \"&lt;br&gt;&lt;b&gt;AP per School:&lt;/b&gt;\", round(ap_per_school, 2),\n      \"&lt;br&gt;&lt;b&gt;AP per 1000 People:&lt;/b&gt;\", round(ap_per_1000_people, 2)\n    ),\n    group = \"Districts\"\n  ) %&gt;%\n  # Schools with detailed popups\n  addCircleMarkers(\n    data = schools_data,\n    radius = 4,\n    color = \"blue\",\n    popup = ~paste(\n      \"&lt;b&gt;School:&lt;/b&gt;\", name,\n      \"&lt;br&gt;&lt;b&gt;Province:&lt;/b&gt;\", province,\n      \"&lt;br&gt;&lt;b&gt;District:&lt;/b&gt;\", district,\n      \"&lt;br&gt;&lt;b&gt;County:&lt;/b&gt;\", county,\n      \"&lt;br&gt;&lt;b&gt;Type:&lt;/b&gt;\", type\n    ),\n    group = \"Schools\"\n  ) %&gt;%\n  # Access points with detailed popups\n  addCircleMarkers(\n    data = ap_data,\n    radius = 4,\n    color = \"green\",\n    popup = ~paste(\n      \"&lt;b&gt;Location:&lt;/b&gt;\", name,\n      \"&lt;br&gt;&lt;b&gt;Province:&lt;/b&gt;\", province,\n      \"&lt;br&gt;&lt;b&gt;District:&lt;/b&gt;\", district,\n      \"&lt;br&gt;&lt;b&gt;County:&lt;/b&gt;\", county,\n      \"&lt;br&gt;&lt;b&gt;Type:&lt;/b&gt;\", type,\n      \"&lt;br&gt;&lt;b&gt;Date:&lt;/b&gt;\", date\n    ),\n    group = \"Access Points\"\n  ) %&gt;%\n  # Add layer controls\n  addLayersControl(\n    overlayGroups = c(\"Districts\", \"Schools\", \"Access Points\"),\n    options = layersControlOptions(collapsed = FALSE)\n  )"
  }
]